

================================================================
== Vivado HLS Report for 'canny_Filter2D'
================================================================
* Date:           Fri Jul 06 13:00:17 2018

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        cannyedge
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.31|        0.63|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1069094|  1069094|  1069094|  1069094|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1       |        0|        0|         1|          -|          -|     1|    no    |
        |- loop_height  |  1069092|  1069092|      1042|          -|          -|  1026|    no    |
        | + loop_width  |     1037|     1037|        13|          1|          1|  1026|    yes   |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 19
* Pipeline: 1
  Pipeline-0: II = 1, D = 13, States = { 6 7 8 9 10 11 12 13 14 15 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (tmp_s)
	3  / (!tmp_s)
3 --> 
	4  / (!exitcond1)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	19  / (exitcond)
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	6  / true
19 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_20 [1/1] 0.00ns
arrayctor.loop1.i.preheader:0  call void (...)* @_ssdm_op_SpecInterface(i8* %p_src_data_stream_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_21 [1/1] 0.00ns
arrayctor.loop1.i.preheader:1  call void (...)* @_ssdm_op_SpecInterface(i8* %p_dst_data_stream_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: p_kernel_val_2_V_1_read_1 [1/1] 0.00ns
arrayctor.loop1.i.preheader:2  %p_kernel_val_2_V_1_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_2_V_1_read)

ST_1: p_kernel_val_2_V_0_read_1 [1/1] 0.00ns
arrayctor.loop1.i.preheader:3  %p_kernel_val_2_V_0_read_1 = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %p_kernel_val_2_V_0_read)

ST_1: p_kernel_val_1_V_2_read_1 [1/1] 0.00ns
arrayctor.loop1.i.preheader:4  %p_kernel_val_1_V_2_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_1_V_2_read)

ST_1: p_kernel_val_1_V_0_read_1 [1/1] 0.00ns
arrayctor.loop1.i.preheader:5  %p_kernel_val_1_V_0_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_1_V_0_read)

ST_1: p_kernel_val_0_V_2_read_1 [1/1] 0.00ns
arrayctor.loop1.i.preheader:6  %p_kernel_val_0_V_2_read_1 = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %p_kernel_val_0_V_2_read)

ST_1: p_kernel_val_0_V_1_read_1 [1/1] 0.00ns
arrayctor.loop1.i.preheader:7  %p_kernel_val_0_V_1_read_1 = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %p_kernel_val_0_V_1_read)

ST_1: k_buf_0_val_3 [1/1] 0.00ns
arrayctor.loop1.i.preheader:8  %k_buf_0_val_3 = alloca [1024 x i8], align 1

ST_1: k_buf_0_val_4 [1/1] 0.00ns
arrayctor.loop1.i.preheader:9  %k_buf_0_val_4 = alloca [1024 x i8], align 1

ST_1: k_buf_0_val_5 [1/1] 0.00ns
arrayctor.loop1.i.preheader:10  %k_buf_0_val_5 = alloca [1024 x i8], align 1

ST_1: stg_31 [1/1] 1.57ns
arrayctor.loop1.i.preheader:11  br label %arrayctor.loop1.i


 <State 2>: 1.57ns
ST_2: tmp_s [1/1] 0.00ns
arrayctor.loop1.i:0  %tmp_s = phi i1 [ %tmp_38, %arrayctor.loop1.i ], [ false, %arrayctor.loop1.i.preheader ]

ST_2: tmp_38 [1/1] 1.37ns
arrayctor.loop1.i:1  %tmp_38 = xor i1 %tmp_s, true

ST_2: rbegin_i_i [1/1] 0.00ns
arrayctor.loop1.i:2  %rbegin_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([64 x i8]* @hls_KD_KD_LineBuffer_MD_6_MC_s) nounwind

ST_2: rend_i_i [1/1] 0.00ns
arrayctor.loop1.i:3  %rend_i_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([64 x i8]* @hls_KD_KD_LineBuffer_MD_6_MC_s, i32 %rbegin_i_i) nounwind

ST_2: stg_36 [1/1] 0.00ns
arrayctor.loop1.i:4  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_2: stg_37 [1/1] 0.00ns
arrayctor.loop1.i:5  br i1 %tmp_s, label %arrayctor.loop1.i, label %._crit_edge.i

ST_2: src_kernel_win_0_val_0_1 [1/1] 0.00ns
._crit_edge.i:0  %src_kernel_win_0_val_0_1 = alloca i8

ST_2: src_kernel_win_0_val_0_1_2 [1/1] 0.00ns
._crit_edge.i:1  %src_kernel_win_0_val_0_1_2 = alloca i8

ST_2: src_kernel_win_0_val_1_1 [1/1] 0.00ns
._crit_edge.i:2  %src_kernel_win_0_val_1_1 = alloca i8

ST_2: src_kernel_win_0_val_1_1_2 [1/1] 0.00ns
._crit_edge.i:3  %src_kernel_win_0_val_1_1_2 = alloca i8

ST_2: src_kernel_win_0_val_2_1 [1/1] 0.00ns
._crit_edge.i:4  %src_kernel_win_0_val_2_1 = alloca i8

ST_2: src_kernel_win_0_val_2_1_2 [1/1] 0.00ns
._crit_edge.i:5  %src_kernel_win_0_val_2_1_2 = alloca i8

ST_2: right_border_buf_0_val_0_1 [1/1] 0.00ns
._crit_edge.i:6  %right_border_buf_0_val_0_1 = alloca i8

ST_2: right_border_buf_0_val_0_1_2 [1/1] 0.00ns
._crit_edge.i:7  %right_border_buf_0_val_0_1_2 = alloca i8

ST_2: right_border_buf_0_val_2_1 [1/1] 0.00ns
._crit_edge.i:8  %right_border_buf_0_val_2_1 = alloca i8

ST_2: right_border_buf_0_val_1_1 [1/1] 0.00ns
._crit_edge.i:9  %right_border_buf_0_val_1_1 = alloca i8

ST_2: right_border_buf_0_val_1_1_2 [1/1] 0.00ns
._crit_edge.i:10  %right_border_buf_0_val_1_1_2 = alloca i8

ST_2: right_border_buf_0_val_2_1_3 [1/1] 0.00ns
._crit_edge.i:11  %right_border_buf_0_val_2_1_3 = alloca i8

ST_2: OP2_V_0_1_cast [1/1] 0.00ns
._crit_edge.i:12  %OP2_V_0_1_cast = sext i2 %p_kernel_val_0_V_1_read_1 to i10

ST_2: OP2_V_0_2_cast [1/1] 0.00ns
._crit_edge.i:13  %OP2_V_0_2_cast = sext i2 %p_kernel_val_0_V_2_read_1 to i10

ST_2: OP2_V_1_cast [1/1] 0.00ns
._crit_edge.i:14  %OP2_V_1_cast = sext i3 %p_kernel_val_1_V_0_read_1 to i11

ST_2: OP2_V_1_2_cast [1/1] 0.00ns
._crit_edge.i:15  %OP2_V_1_2_cast = zext i4 %p_kernel_val_1_V_2_read_1 to i12

ST_2: OP2_V_2_cast [1/1] 0.00ns
._crit_edge.i:16  %OP2_V_2_cast = sext i2 %p_kernel_val_2_V_0_read_1 to i10

ST_2: OP2_V_2_1_cast [1/1] 0.00ns
._crit_edge.i:17  %OP2_V_2_1_cast = zext i3 %p_kernel_val_2_V_1_read_1 to i11

ST_2: stg_56 [1/1] 1.57ns
._crit_edge.i:18  br label %0


 <State 3>: 3.48ns
ST_3: p_014_0_i [1/1] 0.00ns
:0  %p_014_0_i = phi i11 [ 0, %._crit_edge.i ], [ %i_V, %5 ]

ST_3: tmp_50_cast_cast [1/1] 0.00ns
:1  %tmp_50_cast_cast = zext i11 %p_014_0_i to i12

ST_3: stg_59 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1026, i64 1026, i64 0)

ST_3: exitcond1 [1/1] 2.11ns
:3  %exitcond1 = icmp eq i11 %p_014_0_i, -1022

ST_3: i_V [1/1] 1.84ns
:4  %i_V = add i11 %p_014_0_i, 1

ST_3: stg_62 [1/1] 0.00ns
:5  br i1 %exitcond1, label %"filter<0, 0, ap_int<8>, int, 1024, 1024, 3, 3>.exit", label %1

ST_3: tmp [1/1] 0.00ns
:2  %tmp = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_014_0_i, i32 10)

ST_3: tmp_114 [1/1] 0.00ns
:3  %tmp_114 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_014_0_i, i32 10)

ST_3: tmp_115 [1/1] 0.00ns
:4  %tmp_115 = call i10 @_ssdm_op_PartSelect.i10.i11.i32.i32(i11 %p_014_0_i, i32 1, i32 10)

ST_3: icmp [1/1] 2.07ns
:5  %icmp = icmp ne i10 %tmp_115, 0

ST_3: tmp_43 [1/1] 2.11ns
:6  %tmp_43 = icmp eq i11 %p_014_0_i, 1

ST_3: tmp_208_1 [1/1] 2.11ns
:7  %tmp_208_1 = icmp eq i11 %p_014_0_i, 0

ST_3: tmp_44 [1/1] 2.11ns
:8  %tmp_44 = icmp ugt i11 %p_014_0_i, -1024

ST_3: tmp_45 [1/1] 1.84ns
:9  %tmp_45 = add i12 -1, %tmp_50_cast_cast

ST_3: tmp_117 [1/1] 0.00ns
:10  %tmp_117 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %tmp_45, i32 11)

ST_3: tmp_118 [1/1] 0.00ns
:12  %tmp_118 = call i2 @_ssdm_op_PartSelect.i2.i12.i32.i32(i12 %tmp_45, i32 10, i32 11)

ST_3: icmp4 [1/1] 1.36ns
:13  %icmp4 = icmp ne i2 %tmp_118, 1

ST_3: tmp_119 [1/1] 0.00ns
:15  %tmp_119 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %tmp_45, i32 11)

ST_3: p_assign_7 [1/1] 1.84ns
:16  %p_assign_7 = sub i11 1, %p_014_0_i

ST_3: p_assign_7_cast [1/1] 0.00ns
:17  %p_assign_7_cast = sext i11 %p_assign_7 to i12

ST_3: p_p2_i423_i [1/1] 1.37ns
:18  %p_p2_i423_i = select i1 %tmp_119, i12 %p_assign_7_cast, i12 %tmp_45

ST_3: tmp_120 [1/1] 0.00ns
:19  %tmp_120 = call i2 @_ssdm_op_PartSelect.i2.i12.i32.i32(i12 %p_p2_i423_i, i32 10, i32 11)

ST_3: tmp_121 [1/1] 0.00ns
:21  %tmp_121 = trunc i12 %p_p2_i423_i to i2

ST_3: p_assign_6_1 [1/1] 1.84ns
:22  %p_assign_6_1 = add i11 -2, %p_014_0_i

ST_3: tmp_122 [1/1] 0.00ns
:23  %tmp_122 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_assign_6_1, i32 10)

ST_3: tmp_123 [1/1] 0.00ns
:24  %tmp_123 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_assign_6_1, i32 10)

ST_3: tmp_124 [1/1] 0.00ns
:25  %tmp_124 = trunc i11 %p_014_0_i to i2

ST_3: p_assign_6_2 [1/1] 1.84ns
:26  %p_assign_6_2 = add i11 -3, %p_014_0_i

ST_3: tmp_125 [1/1] 0.00ns
:27  %tmp_125 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_assign_6_2, i32 10)

ST_3: tmp_126 [1/1] 0.00ns
:28  %tmp_126 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_assign_6_2, i32 10)

ST_3: tmp_127 [1/1] 0.00ns
:29  %tmp_127 = trunc i11 %p_014_0_i to i2

ST_3: tmp_128 [1/1] 0.00ns
:30  %tmp_128 = trunc i12 %tmp_45 to i2

ST_3: tmp_129 [1/1] 0.00ns
:31  %tmp_129 = trunc i12 %p_p2_i423_i to i2

ST_3: tmp_132 [1/1] 0.00ns
:36  %tmp_132 = trunc i11 %p_assign_6_1 to i2

ST_3: tmp_133 [1/1] 0.80ns
:37  %tmp_133 = sub i2 -2, %tmp_124

ST_3: tmp_134 [1/1] 1.37ns
:38  %tmp_134 = select i1 %tmp_123, i2 %tmp_133, i2 %tmp_132

ST_3: tmp_135 [1/1] 0.00ns
:41  %tmp_135 = trunc i11 %p_assign_6_2 to i2

ST_3: tmp_136 [1/1] 1.37ns
:42  %tmp_136 = xor i2 %tmp_127, -1

ST_3: tmp_137 [1/1] 1.37ns
:43  %tmp_137 = select i1 %tmp_126, i2 %tmp_136, i2 %tmp_135

ST_3: stg_96 [1/1] 0.00ns
filter<0, 0, ap_int<8>, int, 1024, 1024, 3, 3>.exit:0  ret void


 <State 4>: 4.11ns
ST_4: rev [1/1] 1.37ns
:11  %rev = xor i1 %tmp_117, true

ST_4: or_cond_i422_i [1/1] 1.37ns
:14  %or_cond_i422_i = and i1 %icmp4, %rev

ST_4: icmp5 [1/1] 1.36ns
:20  %icmp5 = icmp ne i2 %tmp_120, 1

ST_4: tmp_130 [1/1] 0.80ns
:32  %tmp_130 = sub i2 -2, %tmp_121

ST_4: tmp_131 [1/1] 1.37ns
:33  %tmp_131 = select i1 %icmp5, i2 %tmp_129, i2 %tmp_130

ST_4: tmp_106 [1/1] 1.37ns
:34  %tmp_106 = select i1 %or_cond_i422_i, i2 %tmp_128, i2 %tmp_131

ST_4: tmp_107 [1/1] 1.37ns
:39  %tmp_107 = select i1 %tmp_122, i2 %tmp_134, i2 %tmp_132

ST_4: tmp_108 [1/1] 1.37ns
:44  %tmp_108 = select i1 %tmp_125, i2 %tmp_137, i2 %tmp_135


 <State 5>: 1.57ns
ST_5: stg_105 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1817) nounwind

ST_5: tmp_40 [1/1] 0.00ns
:1  %tmp_40 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1817)

ST_5: row_assign_s [1/1] 1.37ns
:35  %row_assign_s = xor i2 %tmp_106, -1

ST_5: row_assign_10_1_t [1/1] 1.37ns
:40  %row_assign_10_1_t = xor i2 %tmp_107, -1

ST_5: row_assign_10_2_t [1/1] 1.37ns
:45  %row_assign_10_2_t = xor i2 %tmp_108, -1

ST_5: stg_110 [1/1] 1.57ns
:46  br label %2


 <State 6>: 3.48ns
ST_6: p_027_0_i [1/1] 0.00ns
:0  %p_027_0_i = phi i11 [ 0, %1 ], [ %j_V, %._crit_edge411.i ]

ST_6: tmp_53_cast_cast [1/1] 0.00ns
:2  %tmp_53_cast_cast = zext i11 %p_027_0_i to i12

ST_6: exitcond [1/1] 2.11ns
:4  %exitcond = icmp eq i11 %p_027_0_i, -1022

ST_6: j_V [1/1] 1.84ns
:5  %j_V = add i11 %p_027_0_i, 1

ST_6: stg_115 [1/1] 0.00ns
:6  br i1 %exitcond, label %5, label %.critedge.i_ifconv

ST_6: tmp_138 [1/1] 0.00ns
.critedge.i_ifconv:8  %tmp_138 = call i10 @_ssdm_op_PartSelect.i10.i11.i32.i32(i11 %p_027_0_i, i32 1, i32 10)

ST_6: icmp6 [1/1] 2.07ns
.critedge.i_ifconv:9  %icmp6 = icmp ne i10 %tmp_138, 0

ST_6: ImagLoc_x [1/1] 1.84ns
.critedge.i_ifconv:11  %ImagLoc_x = add i12 -1, %tmp_53_cast_cast

ST_6: tmp_139 [1/1] 0.00ns
.critedge.i_ifconv:13  %tmp_139 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_x, i32 11)

ST_6: tmp_140 [1/1] 0.00ns
.critedge.i_ifconv:15  %tmp_140 = call i2 @_ssdm_op_PartSelect.i2.i12.i32.i32(i12 %ImagLoc_x, i32 10, i32 11)

ST_6: icmp7 [1/1] 1.36ns
.critedge.i_ifconv:16  %icmp7 = icmp ne i2 %tmp_140, 1

ST_6: tmp_141 [1/1] 0.00ns
.critedge.i_ifconv:18  %tmp_141 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_x, i32 11)

ST_6: p_assign_1 [1/1] 1.84ns
.critedge.i_ifconv:19  %p_assign_1 = sub i11 1, %p_027_0_i

ST_6: p_assign_1_cast [1/1] 0.00ns
.critedge.i_ifconv:20  %p_assign_1_cast = sext i11 %p_assign_1 to i12

ST_6: p_p2_i_i [1/1] 1.37ns
.critedge.i_ifconv:21  %p_p2_i_i = select i1 %tmp_141, i12 %p_assign_1_cast, i12 %ImagLoc_x

ST_6: tmp_142 [1/1] 0.00ns
.critedge.i_ifconv:23  %tmp_142 = call i2 @_ssdm_op_PartSelect.i2.i12.i32.i32(i12 %p_p2_i_i, i32 10, i32 11)

ST_6: or_cond_i [1/1] 1.37ns
._crit_edge404.i_ifconv:6  %or_cond_i = and i1 %icmp, %icmp6

ST_6: stg_128 [1/1] 0.00ns
._crit_edge404.i_ifconv:7  br i1 %or_cond_i, label %.preheader, label %._crit_edge411.i


 <State 7>: 4.11ns
ST_7: ImagLoc_x_cast [1/1] 0.00ns
.critedge.i_ifconv:12  %ImagLoc_x_cast = sext i12 %ImagLoc_x to i13

ST_7: rev7 [1/1] 1.37ns
.critedge.i_ifconv:14  %rev7 = xor i1 %tmp_139, true

ST_7: or_cond_i_i [1/1] 1.37ns
.critedge.i_ifconv:17  %or_cond_i_i = and i1 %icmp7, %rev7

ST_7: icmp8 [1/1] 1.36ns
.critedge.i_ifconv:24  %icmp8 = icmp ne i2 %tmp_142, 1

ST_7: p_assign_2 [1/1] 1.84ns
.critedge.i_ifconv:25  %p_assign_2 = sub i12 2046, %p_p2_i_i

ST_7: p_assign_2_cast [1/1] 0.00ns
.critedge.i_ifconv:26  %p_assign_2_cast = zext i12 %p_assign_2 to i13

ST_7: sel_tmp [1/1] 1.37ns
.critedge.i_ifconv:27  %sel_tmp = select i1 %or_cond_i_i, i13 %ImagLoc_x_cast, i13 %p_assign_2_cast

ST_7: icmp54_not [1/1] 1.37ns
.critedge.i_ifconv:28  %icmp54_not = xor i1 %icmp7, true

ST_7: sel_tmp7 [1/1] 1.37ns
.critedge.i_ifconv:29  %sel_tmp7 = or i1 %tmp_139, %icmp54_not

ST_7: sel_tmp8 [1/1] 1.37ns
.critedge.i_ifconv:30  %sel_tmp8 = and i1 %icmp8, %sel_tmp7

ST_7: brmerge [1/1] 1.37ns
.critedge.i_ifconv:34  %brmerge = or i1 %tmp_114, %icmp7

ST_7: stg_140 [1/1] 0.00ns
.critedge.i_ifconv:49  br i1 %or_cond_i_i, label %3, label %._crit_edge404.i_ifconv

ST_7: stg_141 [1/1] 0.00ns
:0  br i1 %icmp, label %4, label %borderInterpolate.exit421.i.0

ST_7: stg_142 [1/1] 0.00ns
borderInterpolate.exit421.i.0:1  br i1 %tmp_43, label %"operator().exit464.i.0", label %._crit_edge406.i.0

ST_7: stg_143 [1/1] 0.00ns
._crit_edge406.i.0:0  br i1 %tmp_208_1, label %"operator().exit464.i.1", label %._crit_edge406.i.1

ST_7: stg_144 [1/1] 0.00ns
._crit_edge406.i.1:0  br i1 %tmp_43, label %"operator().exit464.i.2", label %._crit_edge406.i.2

ST_7: stg_145 [1/1] 0.00ns
._crit_edge406.i.2:0  br label %._crit_edge404.i_ifconv

ST_7: stg_146 [1/1] 0.00ns
:0  br i1 %tmp, label %._crit_edge404.i_ifconv, label %.preheader388.i.preheader.0


 <State 8>: 4.08ns
ST_8: p_p2_i_i_cast_cast8 [1/1] 0.00ns
.critedge.i_ifconv:22  %p_p2_i_i_cast_cast8 = sext i12 %p_p2_i_i to i13

ST_8: x [1/1] 1.37ns
.critedge.i_ifconv:31  %x = select i1 %sel_tmp8, i13 %p_p2_i_i_cast_cast8, i13 %sel_tmp

ST_8: col_assign_cast [1/1] 0.00ns
.critedge.i_ifconv:32  %col_assign_cast = sext i13 %x to i32

ST_8: tmp_143 [1/1] 0.00ns
.critedge.i_ifconv:33  %tmp_143 = trunc i13 %x to i2

ST_8: tmp_60 [1/1] 0.00ns
.critedge.i_ifconv:35  %tmp_60 = zext i32 %col_assign_cast to i64

ST_8: k_buf_0_val_3_addr [1/1] 0.00ns
.critedge.i_ifconv:36  %k_buf_0_val_3_addr = getelementptr [1024 x i8]* %k_buf_0_val_3, i64 0, i64 %tmp_60

ST_8: k_buf_0_val_3_load [2/2] 2.71ns
.critedge.i_ifconv:37  %k_buf_0_val_3_load = load i8* %k_buf_0_val_3_addr, align 1

ST_8: k_buf_0_val_4_addr [1/1] 0.00ns
.critedge.i_ifconv:41  %k_buf_0_val_4_addr = getelementptr [1024 x i8]* %k_buf_0_val_4, i64 0, i64 %tmp_60

ST_8: k_buf_0_val_4_load [2/2] 2.71ns
.critedge.i_ifconv:42  %k_buf_0_val_4_load = load i8* %k_buf_0_val_4_addr, align 1

ST_8: k_buf_0_val_5_addr [1/1] 0.00ns
.critedge.i_ifconv:45  %k_buf_0_val_5_addr = getelementptr [1024 x i8]* %k_buf_0_val_5, i64 0, i64 %tmp_60

ST_8: k_buf_0_val_5_load [2/2] 2.71ns
.critedge.i_ifconv:46  %k_buf_0_val_5_load = load i8* %k_buf_0_val_5_addr, align 1


 <State 9>: 4.31ns
ST_9: right_border_buf_0_val_2_1_4 [1/1] 0.00ns
:1  %right_border_buf_0_val_2_1_4 = load i8* %right_border_buf_0_val_2_1_3

ST_9: stg_159 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1026, i64 1026, i64 0)

ST_9: right_border_buf_0_val_0_1_s [1/1] 0.00ns
.critedge.i_ifconv:0  %right_border_buf_0_val_0_1_s = load i8* %right_border_buf_0_val_0_1

ST_9: right_border_buf_0_val_0_1_3 [1/1] 0.00ns
.critedge.i_ifconv:1  %right_border_buf_0_val_0_1_3 = load i8* %right_border_buf_0_val_0_1_2

ST_9: right_border_buf_0_val_2_1_s [1/1] 0.00ns
.critedge.i_ifconv:2  %right_border_buf_0_val_2_1_s = load i8* %right_border_buf_0_val_2_1

ST_9: right_border_buf_0_val_1_1_s [1/1] 0.00ns
.critedge.i_ifconv:3  %right_border_buf_0_val_1_1_s = load i8* %right_border_buf_0_val_1_1

ST_9: right_border_buf_0_val_1_1_3 [1/1] 0.00ns
.critedge.i_ifconv:4  %right_border_buf_0_val_1_1_3 = load i8* %right_border_buf_0_val_1_1_2

ST_9: stg_165 [1/1] 0.00ns
.critedge.i_ifconv:5  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1818) nounwind

ST_9: tmp_54 [1/1] 0.00ns
.critedge.i_ifconv:6  %tmp_54 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1818)

ST_9: stg_167 [1/1] 0.00ns
.critedge.i_ifconv:7  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_9: stg_168 [1/1] 0.00ns
.critedge.i_ifconv:10  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1836) nounwind

ST_9: k_buf_0_val_3_load [1/2] 2.71ns
.critedge.i_ifconv:37  %k_buf_0_val_3_load = load i8* %k_buf_0_val_3_addr, align 1

ST_9: col_assign_3_t [1/1] 1.37ns
.critedge.i_ifconv:38  %col_assign_3_t = xor i2 %tmp_143, -1

ST_9: tmp_61 [1/1] 1.57ns
.critedge.i_ifconv:39  %tmp_61 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %right_border_buf_0_val_0_1_s, i8 %right_border_buf_0_val_0_1_3, i8 undef, i2 %col_assign_3_t)

ST_9: col_buf_0_val_0_0 [1/1] 1.37ns
.critedge.i_ifconv:40  %col_buf_0_val_0_0 = select i1 %brmerge, i8 %k_buf_0_val_3_load, i8 %tmp_61

ST_9: k_buf_0_val_4_load [1/2] 2.71ns
.critedge.i_ifconv:42  %k_buf_0_val_4_load = load i8* %k_buf_0_val_4_addr, align 1

ST_9: tmp_62 [1/1] 1.57ns
.critedge.i_ifconv:43  %tmp_62 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %right_border_buf_0_val_1_1_s, i8 %right_border_buf_0_val_1_1_3, i8 undef, i2 %col_assign_3_t)

ST_9: col_buf_0_val_1_0 [1/1] 1.37ns
.critedge.i_ifconv:44  %col_buf_0_val_1_0 = select i1 %brmerge, i8 %k_buf_0_val_4_load, i8 %tmp_62

ST_9: k_buf_0_val_5_load [1/2] 2.71ns
.critedge.i_ifconv:46  %k_buf_0_val_5_load = load i8* %k_buf_0_val_5_addr, align 1

ST_9: tmp_63 [1/1] 1.57ns
.critedge.i_ifconv:47  %tmp_63 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %right_border_buf_0_val_2_1_4, i8 %right_border_buf_0_val_2_1_s, i8 undef, i2 %col_assign_3_t)

ST_9: col_buf_0_val_2_0 [1/1] 1.37ns
.critedge.i_ifconv:48  %col_buf_0_val_2_0 = select i1 %brmerge, i8 %k_buf_0_val_5_load, i8 %tmp_63

ST_9: tmp_149 [1/1] 1.00ns
borderInterpolate.exit421.i.0:0  %tmp_149 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_V)

ST_9: stg_180 [1/1] 2.71ns
operator().exit464.i.2:0  store i8 %tmp_149, i8* %k_buf_0_val_3_addr, align 1

ST_9: stg_181 [1/1] 0.00ns
operator().exit464.i.2:1  br label %._crit_edge406.i.2

ST_9: right_border_buf_0_val_0_1_4 [1/1] 0.00ns
.preheader388.i.preheader.0:0  %right_border_buf_0_val_0_1_4 = load i8* %right_border_buf_0_val_0_1

ST_9: right_border_buf_0_val_1_1_4 [1/1] 0.00ns
.preheader388.i.preheader.0:1  %right_border_buf_0_val_1_1_4 = load i8* %right_border_buf_0_val_1_1

ST_9: tmp_145 [1/1] 1.00ns
.preheader388.i.preheader.0:4  %tmp_145 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_V)

ST_9: stg_185 [1/1] 2.71ns
.preheader388.i.preheader.0:5  store i8 %tmp_145, i8* %k_buf_0_val_3_addr, align 1

ST_9: stg_186 [1/1] 0.00ns
.preheader388.i.preheader.0:6  store i8 %col_buf_0_val_2_0, i8* %right_border_buf_0_val_2_1_3

ST_9: stg_187 [1/1] 0.00ns
.preheader388.i.preheader.0:7  store i8 %right_border_buf_0_val_1_1_4, i8* %right_border_buf_0_val_1_1_2

ST_9: stg_188 [1/1] 0.00ns
.preheader388.i.preheader.0:8  store i8 %col_buf_0_val_1_0, i8* %right_border_buf_0_val_1_1

ST_9: stg_189 [1/1] 0.00ns
.preheader388.i.preheader.0:9  store i8 %right_border_buf_0_val_2_1_4, i8* %right_border_buf_0_val_2_1

ST_9: stg_190 [1/1] 0.00ns
.preheader388.i.preheader.0:10  store i8 %right_border_buf_0_val_0_1_4, i8* %right_border_buf_0_val_0_1_2

ST_9: stg_191 [1/1] 0.00ns
.preheader388.i.preheader.0:11  store i8 %col_buf_0_val_0_0, i8* %right_border_buf_0_val_0_1


 <State 10>: 2.94ns
ST_10: stg_192 [1/1] 2.71ns
operator().exit464.i.0:0  store i8 %tmp_149, i8* %k_buf_0_val_5_addr, align 1

ST_10: stg_193 [1/1] 0.00ns
operator().exit464.i.0:1  br label %._crit_edge406.i.0

ST_10: stg_194 [1/1] 2.71ns
operator().exit464.i.1:0  store i8 %tmp_149, i8* %k_buf_0_val_4_addr, align 1

ST_10: stg_195 [1/1] 0.00ns
operator().exit464.i.1:1  br label %._crit_edge406.i.1

ST_10: stg_196 [1/1] 2.71ns
.preheader388.i.preheader.0:2  store i8 %k_buf_0_val_4_load, i8* %k_buf_0_val_5_addr, align 1

ST_10: stg_197 [1/1] 2.71ns
.preheader388.i.preheader.0:3  store i8 %k_buf_0_val_3_load, i8* %k_buf_0_val_4_addr, align 1

ST_10: stg_198 [1/1] 0.00ns
.preheader388.i.preheader.0:12  br label %._crit_edge404.i_ifconv

ST_10: tmp_65 [1/1] 1.57ns
._crit_edge404.i_ifconv:0  %tmp_65 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %col_buf_0_val_0_0, i8 %col_buf_0_val_1_0, i8 %col_buf_0_val_2_0, i2 %row_assign_s)

ST_10: src_kernel_win_0_val_0_0 [1/1] 1.37ns
._crit_edge404.i_ifconv:1  %src_kernel_win_0_val_0_0 = select i1 %tmp_44, i8 %tmp_65, i8 %col_buf_0_val_0_0

ST_10: tmp_67 [1/1] 1.57ns
._crit_edge404.i_ifconv:2  %tmp_67 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %col_buf_0_val_0_0, i8 %col_buf_0_val_1_0, i8 %col_buf_0_val_2_0, i2 %row_assign_10_1_t)

ST_10: src_kernel_win_0_val_1_0 [1/1] 1.37ns
._crit_edge404.i_ifconv:3  %src_kernel_win_0_val_1_0 = select i1 %tmp_44, i8 %tmp_67, i8 %col_buf_0_val_1_0

ST_10: tmp_69 [1/1] 1.57ns
._crit_edge404.i_ifconv:4  %tmp_69 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %col_buf_0_val_0_0, i8 %col_buf_0_val_1_0, i8 %col_buf_0_val_2_0, i2 %row_assign_10_2_t)

ST_10: src_kernel_win_0_val_2_0 [1/1] 1.37ns
._crit_edge404.i_ifconv:5  %src_kernel_win_0_val_2_0 = select i1 %tmp_44, i8 %tmp_69, i8 %col_buf_0_val_2_0


 <State 11>: 3.89ns
ST_11: src_kernel_win_0_val_2_1_lo [1/1] 0.00ns
.preheader:3  %src_kernel_win_0_val_2_1_lo = load i8* %src_kernel_win_0_val_2_1

ST_11: OP1_V_0_1_cast [1/1] 0.00ns
.preheader:8  %OP1_V_0_1_cast = zext i8 %src_kernel_win_0_val_2_1_lo to i10

ST_11: p_Val2_0_1 [3/3] 3.89ns
.preheader:9  %p_Val2_0_1 = mul i10 %OP2_V_0_1_cast, %OP1_V_0_1_cast

ST_11: OP1_V_0_2_cast [1/1] 0.00ns
.preheader:12  %OP1_V_0_2_cast = zext i8 %src_kernel_win_0_val_2_0 to i10

ST_11: p_Val2_0_2 [3/3] 3.89ns
.preheader:13  %p_Val2_0_2 = mul i10 %OP2_V_0_2_cast, %OP1_V_0_2_cast

ST_11: src_kernel_win_0_val_2_1_lo_2 [1/1] 0.00ns
._crit_edge411.i:2  %src_kernel_win_0_val_2_1_lo_2 = load i8* %src_kernel_win_0_val_2_1

ST_11: stg_211 [1/1] 0.00ns
._crit_edge411.i:5  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1


 <State 12>: 3.89ns
ST_12: src_kernel_win_0_val_0_1_lo [1/1] 0.00ns
.preheader:0  %src_kernel_win_0_val_0_1_lo = load i8* %src_kernel_win_0_val_0_1

ST_12: src_kernel_win_0_val_0_1_2_s [1/1] 0.00ns
.preheader:1  %src_kernel_win_0_val_0_1_2_s = load i8* %src_kernel_win_0_val_0_1_2

ST_12: src_kernel_win_0_val_1_1_2_s [1/1] 0.00ns
.preheader:2  %src_kernel_win_0_val_1_1_2_s = load i8* %src_kernel_win_0_val_1_1_2

ST_12: src_kernel_win_0_val_2_1_2_s [1/1] 0.00ns
.preheader:4  %src_kernel_win_0_val_2_1_2_s = load i8* %src_kernel_win_0_val_2_1_2

ST_12: p_Val2_0_1 [2/3] 3.89ns
.preheader:9  %p_Val2_0_1 = mul i10 %OP2_V_0_1_cast, %OP1_V_0_1_cast

ST_12: p_Val2_0_2 [2/3] 3.89ns
.preheader:13  %p_Val2_0_2 = mul i10 %OP2_V_0_2_cast, %OP1_V_0_2_cast

ST_12: OP1_V_1_cast [1/1] 0.00ns
.preheader:17  %OP1_V_1_cast = zext i8 %src_kernel_win_0_val_1_1_2_s to i11

ST_12: p_Val2_1 [3/3] 3.89ns
.preheader:18  %p_Val2_1 = mul i11 %OP2_V_1_cast, %OP1_V_1_cast

ST_12: OP1_V_2_cast [1/1] 0.00ns
.preheader:23  %OP1_V_2_cast = zext i8 %src_kernel_win_0_val_0_1_2_s to i10

ST_12: p_Val2_2 [3/3] 3.89ns
.preheader:24  %p_Val2_2 = mul i10 %OP2_V_2_cast, %OP1_V_2_cast

ST_12: OP1_V_2_1_cast [1/1] 0.00ns
.preheader:25  %OP1_V_2_1_cast = zext i8 %src_kernel_win_0_val_0_1_lo to i11

ST_12: p_Val2_2_1 [3/3] 3.89ns
.preheader:26  %p_Val2_2_1 = mul i11 %OP2_V_2_1_cast, %OP1_V_2_1_cast

ST_12: src_kernel_win_0_val_0_1_lo_2 [1/1] 0.00ns
._crit_edge411.i:0  %src_kernel_win_0_val_0_1_lo_2 = load i8* %src_kernel_win_0_val_0_1

ST_12: src_kernel_win_0_val_1_1_lo [1/1] 0.00ns
._crit_edge411.i:1  %src_kernel_win_0_val_1_1_lo = load i8* %src_kernel_win_0_val_1_1

ST_12: empty [1/1] 0.00ns
._crit_edge411.i:3  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1818, i32 %tmp_54)

ST_12: stg_227 [1/1] 0.00ns
._crit_edge411.i:4  store i8 %src_kernel_win_0_val_2_1_lo_2, i8* %src_kernel_win_0_val_2_1_2

ST_12: stg_228 [1/1] 0.00ns
._crit_edge411.i:6  store i8 %src_kernel_win_0_val_1_1_lo, i8* %src_kernel_win_0_val_1_1_2

ST_12: stg_229 [1/1] 0.00ns
._crit_edge411.i:7  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1

ST_12: stg_230 [1/1] 0.00ns
._crit_edge411.i:8  store i8 %src_kernel_win_0_val_0_1_lo_2, i8* %src_kernel_win_0_val_0_1_2

ST_12: stg_231 [1/1] 0.00ns
._crit_edge411.i:9  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1

ST_12: stg_232 [1/1] 0.00ns
._crit_edge411.i:10  br label %2


 <State 13>: 3.89ns
ST_13: OP1_V_0_cast [1/1] 0.00ns
.preheader:5  %OP1_V_0_cast = zext i8 %src_kernel_win_0_val_2_1_2_s to i9

ST_13: p_Val2_s [1/1] 1.72ns
.preheader:6  %p_Val2_s = sub i9 0, %OP1_V_0_cast

ST_13: p_Val2_0_1 [1/3] 3.89ns
.preheader:9  %p_Val2_0_1 = mul i10 %OP2_V_0_1_cast, %OP1_V_0_1_cast

ST_13: p_Val2_0_2 [1/3] 3.89ns
.preheader:13  %p_Val2_0_2 = mul i10 %OP2_V_0_2_cast, %OP1_V_0_2_cast

ST_13: p_Val2_1 [2/3] 3.89ns
.preheader:18  %p_Val2_1 = mul i11 %OP2_V_1_cast, %OP1_V_1_cast

ST_13: OP1_V_1_2_cast [1/1] 0.00ns
.preheader:21  %OP1_V_1_2_cast = zext i8 %src_kernel_win_0_val_1_0 to i12

ST_13: p_Val2_1_2 [3/3] 3.89ns
.preheader:22  %p_Val2_1_2 = mul i12 %OP2_V_1_2_cast, %OP1_V_1_2_cast

ST_13: p_Val2_2 [2/3] 3.89ns
.preheader:24  %p_Val2_2 = mul i10 %OP2_V_2_cast, %OP1_V_2_cast

ST_13: p_Val2_2_1 [2/3] 3.89ns
.preheader:26  %p_Val2_2_1 = mul i11 %OP2_V_2_1_cast, %OP1_V_2_1_cast


 <State 14>: 3.89ns
ST_14: tmp_252_0_cast [1/1] 0.00ns
.preheader:7  %tmp_252_0_cast = sext i9 %p_Val2_s to i11

ST_14: tmp_252_0_1_cast [1/1] 0.00ns
.preheader:10  %tmp_252_0_1_cast = sext i10 %p_Val2_0_1 to i11

ST_14: p_Val2_13_0_1 [1/1] 1.37ns
.preheader:11  %p_Val2_13_0_1 = add i11 %tmp_252_0_cast, %tmp_252_0_1_cast

ST_14: tmp_252_0_2_cast_cast [1/1] 0.00ns
.preheader:14  %tmp_252_0_2_cast_cast = sext i10 %p_Val2_0_2 to i11

ST_14: p_Val2_13_0_2 [1/1] 1.37ns
.preheader:15  %p_Val2_13_0_2 = add i11 %tmp_252_0_2_cast_cast, %p_Val2_13_0_1

ST_14: p_Val2_1 [1/3] 3.89ns
.preheader:18  %p_Val2_1 = mul i11 %OP2_V_1_cast, %OP1_V_1_cast

ST_14: p_Val2_1_2 [2/3] 3.89ns
.preheader:22  %p_Val2_1_2 = mul i12 %OP2_V_1_2_cast, %OP1_V_1_2_cast

ST_14: p_Val2_2 [1/3] 3.89ns
.preheader:24  %p_Val2_2 = mul i10 %OP2_V_2_cast, %OP1_V_2_cast

ST_14: p_Val2_2_1 [1/3] 3.89ns
.preheader:26  %p_Val2_2_1 = mul i11 %OP2_V_2_1_cast, %OP1_V_2_1_cast


 <State 15>: 3.89ns
ST_15: p_Val2_13_0_2_cast6 [1/1] 0.00ns
.preheader:16  %p_Val2_13_0_2_cast6 = sext i11 %p_Val2_13_0_2 to i12

ST_15: tmp_252_1_cast_cast [1/1] 0.00ns
.preheader:19  %tmp_252_1_cast_cast = sext i11 %p_Val2_1 to i12

ST_15: p_Val2_13_1_1 [1/1] 1.84ns
.preheader:20  %p_Val2_13_1_1 = add i12 %tmp_252_1_cast_cast, %p_Val2_13_0_2_cast6

ST_15: p_Val2_1_2 [1/3] 3.89ns
.preheader:22  %p_Val2_1_2 = mul i12 %OP2_V_1_2_cast, %OP1_V_1_2_cast

ST_15: tmp_252_2_2_cast_cast_cast [1/1] 0.00ns
.preheader:27  %tmp_252_2_2_cast_cast_cast = zext i8 %src_kernel_win_0_val_0_0 to i10

ST_15: tmp4 [1/1] 1.84ns
.preheader:29  %tmp4 = add i10 %tmp_252_2_2_cast_cast_cast, %p_Val2_2

ST_15: tmp4_cast [1/1] 0.00ns
.preheader:30  %tmp4_cast = sext i10 %tmp4 to i11

ST_15: tmp3 [1/1] 1.84ns
.preheader:31  %tmp3 = add i11 %p_Val2_2_1, %tmp4_cast


 <State 16>: 2.74ns
ST_16: tmp2 [1/1] 1.37ns
.preheader:28  %tmp2 = add i12 %p_Val2_1_2, %p_Val2_13_1_1

ST_16: tmp3_cast [1/1] 0.00ns
.preheader:32  %tmp3_cast = sext i11 %tmp3 to i12

ST_16: p_Val2_4 [1/1] 1.37ns
.preheader:33  %p_Val2_4 = add i12 %tmp2, %tmp3_cast

ST_16: isneg [1/1] 0.00ns
.preheader:34  %isneg = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_4, i32 11)

ST_16: p_Val2_5 [1/1] 0.00ns
.preheader:35  %p_Val2_5 = trunc i12 %p_Val2_4 to i8

ST_16: tmp_70 [1/1] 0.00ns
.preheader:36  %tmp_70 = call i4 @_ssdm_op_PartSelect.i4.i12.i32.i32(i12 %p_Val2_4, i32 8, i32 11)


 <State 17>: 3.25ns
ST_17: tmp_i_i [1/1] 1.37ns
.preheader:37  %tmp_i_i = xor i1 %isneg, true

ST_17: not_i_i_i [1/1] 1.88ns
.preheader:38  %not_i_i_i = icmp ne i4 %tmp_70, 0

ST_17: overflow [1/1] 1.37ns
.preheader:39  %overflow = and i1 %not_i_i_i, %tmp_i_i


 <State 18>: 3.74ns
ST_18: p_mux_i_i_cast [1/1] 1.37ns
.preheader:40  %p_mux_i_i_cast = select i1 %tmp_i_i, i8 -1, i8 0

ST_18: tmp_i_i_78 [1/1] 1.37ns
.preheader:41  %tmp_i_i_78 = or i1 %isneg, %overflow

ST_18: p_Val2_7 [1/1] 1.37ns
.preheader:42  %p_Val2_7 = select i1 %tmp_i_i_78, i8 %p_mux_i_i_cast, i8 %p_Val2_5

ST_18: stg_271 [1/1] 1.00ns
.preheader:43  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %p_dst_data_stream_V, i8 %p_Val2_7)

ST_18: stg_272 [1/1] 0.00ns
.preheader:44  br label %._crit_edge411.i


 <State 19>: 0.00ns
ST_19: empty_79 [1/1] 0.00ns
:0  %empty_79 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1817, i32 %tmp_40)

ST_19: stg_274 [1/1] 0.00ns
:1  br label %0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
