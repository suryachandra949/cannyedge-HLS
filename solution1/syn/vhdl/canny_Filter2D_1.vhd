-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_Filter2D_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of canny_Filter2D_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_pp0_stg0_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st19_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3FFE : STD_LOGIC_VECTOR (13 downto 0) := "11111111111110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_1FFE : STD_LOGIC_VECTOR (12 downto 0) := "1111111111110";
    constant ap_const_lv13_1FFD : STD_LOGIC_VECTOR (12 downto 0) := "1111111111101";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv21_9D8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100111011000";
    constant ap_const_lv20_7A1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000011110100001";
    constant ap_const_lv20_5E9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010111101001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_25 : BOOLEAN;
    signal p_027_0_i_reg_274 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast_fu_285_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rows_cast_reg_1331 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_fu_289_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_reg_1342 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_60 : BOOLEAN;
    signal heightloop_fu_299_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal heightloop_reg_1431 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_phi_fu_256_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal widthloop_fu_304_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal widthloop_reg_1436 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_neg391_i_cast_fu_312_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_neg391_i_cast_reg_1441 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_anchor_4_1_cast_fu_326_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_anchor_4_1_cast_reg_1448 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_44_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_346_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_46_reg_1460 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_1467 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_368_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_50_reg_1472 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_51_fu_374_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_reg_1477 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_389_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_1485 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_91 : BOOLEAN;
    signal tmp_54_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_1490 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1494 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_1504 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_356_1_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_356_1_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_356_2_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_356_2_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_1516 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1523 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_1528 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i423_i_fu_476_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i423_i_reg_1533 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_reg_1538 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_382_1_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_382_1_reg_1543 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i423_i_1_fu_524_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i423_i_1_reg_1548 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_69_reg_1553 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_382_2_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_382_2_reg_1558 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i423_i_2_fu_572_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i423_i_2_reg_1563 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_73_fu_587_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_reg_1568 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_fu_591_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_reg_1573 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_fu_595_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_reg_1578 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_fu_601_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_reg_1583 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_83_fu_605_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_83_reg_1588 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_85_fu_609_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_85_reg_1593 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_93_fu_615_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_93_reg_1598 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_95_fu_619_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_95_reg_1603 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_96_fu_623_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_96_reg_1608 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge2_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_154 : BOOLEAN;
    signal tmp_74_fu_676_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_reg_1618 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_fu_683_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_reg_1623 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge3_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_reg_1628 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_694_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_82_reg_1633 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_87_fu_701_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_87_reg_1638 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge4_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_712_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_reg_1648 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_98_fu_719_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_98_reg_1653 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_182 : BOOLEAN;
    signal row_assign_s_fu_735_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_s_reg_1663 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_fu_745_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_reg_1668 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_fu_755_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_reg_1673 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_1678 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_198 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_80_reg_1678_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1713 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_227 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal or_cond_i_reg_1709 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_251 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_80_reg_1678_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_80_reg_1678_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_80_reg_1678_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_80_reg_1678_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_80_reg_1678_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_769_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_791_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_reg_1687 : STD_LOGIC_VECTOR (12 downto 0);
    signal rev6_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev6_reg_1692 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_1697 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_830_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i_i_reg_1703 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_cond_i_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1709_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_fu_863_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_p2_i_i_cast_reg_1717 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_86_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_1722 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_875_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp_reg_1727 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp9_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1737 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1737_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1737_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_897_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_reg_1744 : STD_LOGIC_VECTOR (13 downto 0);
    signal col_assign_6_t_fu_907_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_6_t_reg_1749 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_6_t_reg_1749_pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_3_addr_reg_1756 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_addr_reg_1762 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_k_buf_0_val_4_addr_reg_1762_pp0_it4 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1768 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_k_buf_0_val_5_addr_reg_1768_pp0_it4 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1774 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_951_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1779 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1787 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_969_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1792 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_987_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1800 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_112_reg_1808 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_1038_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_reg_1814 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1814_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_1052_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_reg_1820 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1820_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_lo_reg_1825 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1825_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1825_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_lo_reg_1850 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1298_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_17_0_1_reg_1855 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1255_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp28_reg_1860 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_17_1_fu_1160_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_17_1_reg_1880 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1275_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp33_reg_1895 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1262_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp35_reg_1900 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1248_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp32_reg_1905 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1290_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp34_reg_1910 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_3_fu_1216_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_reg_1915 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_110_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_not_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_not_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_252 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_014_0_i_reg_263 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_494 : BOOLEAN;
    signal tmp_89_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_val_0_1_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_1_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_1_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_fu_1066_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_1_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_1_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_1_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_309_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_tmp_s_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_335_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_394_cast_fu_342_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_49_fu_357_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_108_cast_fu_364_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_48_fu_318_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_cast_fu_380_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_55_fu_405_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_58_fu_443_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_61_fu_462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_s_fu_470_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_14_1_fu_491_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_66_fu_510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_15_1_fu_518_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_14_2_fu_539_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_70_fu_558_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_15_2_fu_566_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_63_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_487_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_68_fu_535_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_fu_580_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_fu_583_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev3_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev5_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i422_i_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i422_i_1_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_392_1_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i422_i_2_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_392_2_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_730_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_88_fu_740_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_99_fu_750_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_98_cast_fu_760_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_100_fu_775_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_101_fu_797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_816_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_824_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp3_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_mux_fu_852_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal brmerge1_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_mux_cast_fu_859_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_assign_4_fu_870_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp1_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_fu_903_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_cast_fu_912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_940_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_fu_958_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_fu_976_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_97_fu_1030_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_fu_1044_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_105_fu_1058_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp28_cast_fu_1157_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_17_0_1_cast_fu_1154_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp34_cast_fu_1178_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_1_fu_1181_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_1_fu_1181_p2 : signal is "no";
    signal tmp_108_fu_1196_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1186_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_i_i_fu_1204_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_109_fu_1208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1248_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1248_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1255_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1255_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1283_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1262_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1262_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1306_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1269_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1269_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1275_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1275_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1275_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1283_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1283_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1290_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1290_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1290_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1298_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1298_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1269_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1306_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1306_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1248_ce : STD_LOGIC;
    signal grp_fu_1255_ce : STD_LOGIC;
    signal grp_fu_1262_ce : STD_LOGIC;
    signal grp_fu_1269_ce : STD_LOGIC;
    signal grp_fu_1275_ce : STD_LOGIC;
    signal grp_fu_1283_ce : STD_LOGIC;
    signal grp_fu_1290_ce : STD_LOGIC;
    signal grp_fu_1298_ce : STD_LOGIC;
    signal grp_fu_1306_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1248_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1255_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1262_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1269_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1275_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1275_p20 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1283_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1290_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1290_p20 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1298_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1306_p00 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_bdd_1273 : BOOLEAN;
    signal ap_sig_bdd_1275 : BOOLEAN;
    signal ap_sig_bdd_1272 : BOOLEAN;
    signal ap_sig_bdd_1278 : BOOLEAN;

    component canny_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_mac_muladd_8ns_13ns_22ns_22_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component canny_mac_muladd_8ns_12ns_20ns_20_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component canny_mul_mul_8ns_12ns_20_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component canny_mac_muladd_8ns_12ns_21ns_22_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component canny_mac_muladd_8ns_12ns_20ns_21_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component canny_Filter2D_1_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => k_buf_0_val_3_d1);

    k_buf_0_val_4_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    canny_mux_3to1_sel2_8_1_U14 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_0_1_fu_160,
        din2 => right_border_buf_0_val_0_1_1_fu_164,
        din3 => ap_const_lv8_0,
        din4 => ap_reg_ppstg_col_assign_6_t_reg_1749_pp0_it3,
        dout => tmp_90_fu_940_p5);

    canny_mux_3to1_sel2_8_1_U15 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_1_1_fu_172,
        din2 => right_border_buf_0_val_1_1_1_fu_176,
        din3 => ap_const_lv8_0,
        din4 => ap_reg_ppstg_col_assign_6_t_reg_1749_pp0_it3,
        dout => tmp_91_fu_958_p5);

    canny_mux_3to1_sel2_8_1_U16 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_2_1_1_fu_180,
        din2 => right_border_buf_0_val_2_1_fu_168,
        din3 => ap_const_lv8_0,
        din4 => ap_reg_ppstg_col_assign_6_t_reg_1749_pp0_it3,
        dout => tmp_92_fu_976_p5);

    canny_mux_3to1_sel2_8_1_U17 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1779,
        din2 => col_buf_0_val_1_0_reg_1792,
        din3 => col_buf_0_val_2_0_reg_1800,
        din4 => row_assign_s_reg_1663,
        dout => tmp_97_fu_1030_p5);

    canny_mux_3to1_sel2_8_1_U18 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1779,
        din2 => col_buf_0_val_1_0_reg_1792,
        din3 => col_buf_0_val_2_0_reg_1800,
        din4 => row_assign_13_1_t_reg_1668,
        dout => tmp_102_fu_1044_p5);

    canny_mux_3to1_sel2_8_1_U19 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1779,
        din2 => col_buf_0_val_1_0_reg_1792,
        din3 => col_buf_0_val_2_0_reg_1800,
        din4 => row_assign_13_2_t_reg_1673,
        dout => tmp_105_fu_1058_p5);

    canny_mac_muladd_8ns_13ns_22ns_22_3_U20 : component canny_mac_muladd_8ns_13ns_22ns_22_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1248_p0,
        din1 => grp_fu_1248_p1,
        din2 => tmp33_reg_1895,
        ce => grp_fu_1248_ce,
        dout => grp_fu_1248_p3);

    canny_mac_muladd_8ns_12ns_20ns_20_3_U21 : component canny_mac_muladd_8ns_12ns_20ns_20_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1255_p0,
        din1 => grp_fu_1255_p1,
        din2 => grp_fu_1283_p2,
        ce => grp_fu_1255_ce,
        dout => grp_fu_1255_p3);

    canny_mac_muladd_8ns_12ns_20ns_20_3_U22 : component canny_mac_muladd_8ns_12ns_20ns_20_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1262_p0,
        din1 => grp_fu_1262_p1,
        din2 => grp_fu_1306_p2,
        ce => grp_fu_1262_ce,
        dout => grp_fu_1262_p3);

    canny_mul_mul_8ns_12ns_20_3_U23 : component canny_mul_mul_8ns_12ns_20_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1269_p0,
        din1 => grp_fu_1269_p1,
        ce => grp_fu_1269_ce,
        dout => grp_fu_1269_p2);

    canny_mac_muladd_8ns_12ns_21ns_22_3_U24 : component canny_mac_muladd_8ns_12ns_21ns_22_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1275_p0,
        din1 => grp_fu_1275_p1,
        din2 => grp_fu_1275_p2,
        ce => grp_fu_1275_ce,
        dout => grp_fu_1275_p3);

    canny_mul_mul_8ns_12ns_20_3_U25 : component canny_mul_mul_8ns_12ns_20_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1283_p0,
        din1 => grp_fu_1283_p1,
        ce => grp_fu_1283_ce,
        dout => grp_fu_1283_p2);

    canny_mac_muladd_8ns_12ns_20ns_21_3_U26 : component canny_mac_muladd_8ns_12ns_20ns_21_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 20,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1290_p0,
        din1 => grp_fu_1290_p1,
        din2 => grp_fu_1290_p2,
        ce => grp_fu_1290_ce,
        dout => grp_fu_1290_p3);

    canny_mac_muladd_8ns_12ns_20ns_20_3_U27 : component canny_mac_muladd_8ns_12ns_20ns_20_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1298_p0,
        din1 => grp_fu_1298_p1,
        din2 => grp_fu_1269_p2,
        ce => grp_fu_1298_ce,
        dout => grp_fu_1298_p3);

    canny_mul_mul_8ns_12ns_20_3_U28 : component canny_mul_mul_8ns_12ns_20_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1306_p0,
        din1 => grp_fu_1306_p1,
        ce => grp_fu_1306_ce,
        dout => grp_fu_1306_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = tmp_80_fu_764_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
                        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then 
                        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- p_014_0_i_reg_263 assign process. --
    p_014_0_i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_6)) then 
                p_014_0_i_reg_263 <= i_V_reg_1485;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_phi_fu_256_p4 = ap_const_lv1_0))) then 
                p_014_0_i_reg_263 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- p_027_0_i_reg_274 assign process. --
    p_027_0_i_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_80_fu_764_p2)))) then 
                p_027_0_i_reg_274 <= j_V_fu_769_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                p_027_0_i_reg_274 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- tmp_s_reg_252 assign process. --
    tmp_s_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                tmp_s_reg_252 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_s_phi_fu_256_p4 = ap_const_lv1_0)))) then 
                tmp_s_reg_252 <= tmp_43_fu_293_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_80_fu_764_p2)))) then
                ImagLoc_x_reg_1687 <= ImagLoc_x_fu_791_p2;
                or_cond_i_reg_1709 <= or_cond_i_fu_838_p2;
                p_p2_i_i_reg_1703 <= p_p2_i_i_fu_830_p3;
                rev6_reg_1692 <= rev6_fu_805_p2;
                tmp_84_reg_1697 <= tmp_84_fu_811_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                ap_reg_ppstg_brmerge_reg_1737_pp0_it2 <= brmerge_reg_1737;
                ap_reg_ppstg_brmerge_reg_1737_pp0_it3 <= ap_reg_ppstg_brmerge_reg_1737_pp0_it2;
                ap_reg_ppstg_col_assign_6_t_reg_1749_pp0_it3 <= col_assign_6_t_reg_1749;
                ap_reg_ppstg_k_buf_0_val_4_addr_reg_1762_pp0_it4 <= k_buf_0_val_4_addr_reg_1762;
                ap_reg_ppstg_k_buf_0_val_5_addr_reg_1768_pp0_it4 <= k_buf_0_val_5_addr_reg_1768;
                ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it2 <= or_cond_i_i_reg_1713;
                ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3 <= ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it2;
                ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4 <= ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it10 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it9;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it11 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it10;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it2 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it1;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it3 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it2;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it4 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it3;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it5 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it4;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it6 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it5;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it7 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it6;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it8 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it7;
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it9 <= ap_reg_ppstg_or_cond_i_reg_1709_pp0_it8;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1814_pp0_it6 <= src_kernel_win_0_val_0_0_reg_1814;
                ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1820_pp0_it6 <= src_kernel_win_0_val_1_0_reg_1820;
                ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1825_pp0_it6 <= src_kernel_win_0_val_1_1_lo_reg_1825;
                ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1825_pp0_it7 <= ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1825_pp0_it6;
                ap_reg_ppstg_tmp_80_reg_1678_pp0_it2 <= ap_reg_ppstg_tmp_80_reg_1678_pp0_it1;
                ap_reg_ppstg_tmp_80_reg_1678_pp0_it3 <= ap_reg_ppstg_tmp_80_reg_1678_pp0_it2;
                ap_reg_ppstg_tmp_80_reg_1678_pp0_it4 <= ap_reg_ppstg_tmp_80_reg_1678_pp0_it3;
                ap_reg_ppstg_tmp_80_reg_1678_pp0_it5 <= ap_reg_ppstg_tmp_80_reg_1678_pp0_it4;
                ap_reg_ppstg_tmp_80_reg_1678_pp0_it6 <= ap_reg_ppstg_tmp_80_reg_1678_pp0_it5;
                src_kernel_win_0_val_0_0_reg_1814 <= src_kernel_win_0_val_0_0_fu_1038_p3;
                src_kernel_win_0_val_1_0_reg_1820 <= src_kernel_win_0_val_1_0_fu_1052_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                ap_reg_ppstg_or_cond_i_reg_1709_pp0_it1 <= or_cond_i_reg_1709;
                ap_reg_ppstg_tmp_80_reg_1678_pp0_it1 <= tmp_80_reg_1678;
                tmp_80_reg_1678 <= tmp_80_fu_764_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_57_reg_1516)))) then
                brmerge2_reg_1613 <= brmerge2_fu_671_p2;
                brmerge3_reg_1628 <= brmerge3_fu_689_p2;
                brmerge4_reg_1643 <= brmerge4_fu_707_p2;
                tmp_74_reg_1618 <= tmp_74_fu_676_p3;
                tmp_77_reg_1623 <= tmp_77_fu_683_p3;
                tmp_82_reg_1633 <= tmp_82_fu_694_p3;
                tmp_87_reg_1638 <= tmp_87_fu_701_p3;
                tmp_94_reg_1648 <= tmp_94_fu_712_p3;
                tmp_98_reg_1653 <= tmp_98_fu_719_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_80_reg_1678)))) then
                brmerge_reg_1737 <= brmerge_fu_889_p2;
                or_cond_i_i_reg_1713 <= or_cond_i_i_fu_843_p2;
                p_p2_i_i_cast_reg_1717 <= p_p2_i_i_cast_fu_863_p1;
                sel_tmp9_reg_1732 <= sel_tmp9_fu_883_p2;
                sel_tmp_reg_1727 <= sel_tmp_fu_875_p3;
                tmp_86_reg_1722 <= tmp_86_fu_866_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it1)))) then
                col_assign_6_t_reg_1749 <= col_assign_6_t_fu_907_p2;
                x_reg_1744 <= x_fu_897_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                col_buf_0_val_0_0_reg_1779 <= col_buf_0_val_0_0_fu_951_p3;
                col_buf_0_val_1_0_reg_1792 <= col_buf_0_val_1_0_fu_969_p3;
                col_buf_0_val_2_0_reg_1800 <= col_buf_0_val_2_0_fu_987_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                    cols_cast_reg_1342(11 downto 0) <= cols_cast_fu_289_p1(11 downto 0);
                    rows_cast_reg_1331(11 downto 0) <= rows_cast_fu_285_p1(11 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_phi_fu_256_p4 = ap_const_lv1_0))) then
                heightloop_reg_1431 <= heightloop_fu_299_p2;
                    p_anchor_4_1_cast_reg_1448(0) <= p_anchor_4_1_cast_fu_326_p1(0);
                p_neg391_i_cast_reg_1441 <= p_neg391_i_cast_fu_312_p2;
                tmp_44_reg_1453 <= tmp_44_fu_330_p2;
                    tmp_46_reg_1460(13 downto 1) <= tmp_46_fu_346_p2(13 downto 1);
                tmp_47_reg_1467 <= tmp_47_fu_352_p2;
                    tmp_50_reg_1472(13 downto 1) <= tmp_50_fu_368_p2(13 downto 1);
                tmp_51_reg_1477 <= tmp_51_fu_374_p2;
                widthloop_reg_1436 <= widthloop_fu_304_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_V_reg_1485 <= i_V_fu_389_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_52_fu_384_p2)))) then
                icmp_reg_1499 <= icmp_fu_415_p2;
                p_p2_i423_i_1_reg_1548 <= p_p2_i423_i_1_fu_524_p3;
                p_p2_i423_i_2_reg_1563 <= p_p2_i423_i_2_fu_572_p3;
                p_p2_i423_i_reg_1533 <= p_p2_i423_i_fu_476_p3;
                tmp_356_1_reg_1508 <= tmp_356_1_fu_426_p2;
                tmp_356_2_reg_1512 <= tmp_356_2_fu_432_p2;
                tmp_382_1_reg_1543 <= tmp_382_1_fu_505_p2;
                tmp_382_2_reg_1558 <= tmp_382_2_fu_553_p2;
                tmp_54_reg_1490 <= tmp_54_fu_395_p2;
                tmp_56_reg_1504 <= tmp_56_fu_421_p2;
                tmp_57_reg_1516 <= tmp_57_fu_438_p2;
                tmp_59_reg_1523 <= tmp_58_fu_443_p2(12 downto 12);
                tmp_60_reg_1528 <= tmp_60_fu_457_p2;
                tmp_65_reg_1538 <= p_assign_14_1_fu_491_p2(12 downto 12);
                tmp_69_reg_1553 <= p_assign_14_2_fu_539_p2(12 downto 12);
                tmp_73_reg_1568 <= tmp_73_fu_587_p1;
                tmp_75_reg_1573 <= tmp_75_fu_591_p1;
                tmp_76_reg_1578 <= tmp_76_fu_595_p2;
                tmp_79_reg_1583 <= tmp_79_fu_601_p1;
                tmp_83_reg_1588 <= tmp_83_fu_605_p1;
                tmp_85_reg_1593 <= tmp_85_fu_609_p2;
                tmp_93_reg_1598 <= tmp_93_fu_615_p1;
                tmp_95_reg_1603 <= tmp_95_fu_619_p1;
                tmp_96_reg_1608 <= tmp_96_fu_623_p2;
                ult_reg_1494 <= ult_fu_400_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it2)))) then
                k_buf_0_val_3_addr_reg_1756 <= tmp_89_fu_915_p1(10 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1762 <= tmp_89_fu_915_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1768 <= tmp_89_fu_915_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                k_buf_0_val_3_load_reg_1774 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1787 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it10)))) then
                p_Result_2_i_i_not_reg_1925 <= p_Result_2_i_i_not_fu_1230_p2;
                p_Val2_3_reg_1915 <= p_Val2_3_fu_1216_p2;
                tmp_110_reg_1920 <= p_Val2_3_fu_1216_p2(7 downto 7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it6)))) then
                p_Val2_17_0_1_reg_1855 <= grp_fu_1298_p3;
                tmp28_reg_1860 <= grp_fu_1255_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it7)))) then
                p_Val2_17_1_reg_1880 <= p_Val2_17_1_fu_1160_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                rev_reg_1658 <= rev_fu_725_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                right_border_buf_0_val_0_1_1_fu_164 <= right_border_buf_0_val_0_1_fu_160;
                right_border_buf_0_val_0_1_fu_160 <= col_buf_0_val_0_0_fu_951_p3;
                right_border_buf_0_val_1_1_1_fu_176 <= right_border_buf_0_val_1_1_fu_172;
                right_border_buf_0_val_1_1_fu_172 <= col_buf_0_val_1_0_fu_969_p3;
                right_border_buf_0_val_2_1_1_fu_180 <= col_buf_0_val_2_0_fu_987_p3;
                right_border_buf_0_val_2_1_fu_168 <= right_border_buf_0_val_2_1_1_fu_180;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_57_reg_1516)) and (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then
                row_assign_13_1_t_reg_1668 <= row_assign_13_1_t_fu_745_p2;
                row_assign_13_2_t_reg_1673 <= row_assign_13_2_t_fu_755_p2;
                row_assign_s_reg_1663 <= row_assign_s_fu_735_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it6)))) then
                src_kernel_win_0_val_0_1_1_fu_140 <= src_kernel_win_0_val_0_1_fu_136;
                src_kernel_win_0_val_0_1_fu_136 <= ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1814_pp0_it6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it6)))) then
                src_kernel_win_0_val_0_1_lo_reg_1850 <= src_kernel_win_0_val_0_1_fu_136;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it4)))) then
                src_kernel_win_0_val_1_1_1_fu_148 <= src_kernel_win_0_val_1_1_fu_144;
                src_kernel_win_0_val_1_1_fu_144 <= src_kernel_win_0_val_1_0_fu_1052_p3;
                src_kernel_win_0_val_2_1_1_fu_156 <= src_kernel_win_0_val_2_1_fu_152;
                src_kernel_win_0_val_2_1_fu_152 <= src_kernel_win_0_val_2_0_fu_1066_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it4)))) then
                src_kernel_win_0_val_1_1_lo_reg_1825 <= src_kernel_win_0_val_1_1_fu_144;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it9)))) then
                tmp32_reg_1905 <= grp_fu_1248_p3;
                tmp34_reg_1910 <= grp_fu_1290_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it8)))) then
                tmp33_reg_1895 <= grp_fu_1275_p3;
                tmp35_reg_1900 <= grp_fu_1262_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                tmp_112_reg_1808 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    rows_cast_reg_1331(12) <= '0';
    cols_cast_reg_1342(12) <= '0';
    p_anchor_4_1_cast_reg_1448(12 downto 1) <= "000000000000";
    tmp_46_reg_1460(0) <= '0';
    tmp_50_reg_1472(0) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_s_phi_fu_256_p4, tmp_52_fu_384_p2, ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it11, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_s_phi_fu_256_p4 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_52_fu_384_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
            when ap_ST_pp0_stg0_fsm_5 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                end if;
            when ap_ST_st19_fsm_6 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ImagLoc_x_cast_mux_cast_fu_859_p1 <= std_logic_vector(resize(unsigned(ImagLoc_x_cast_mux_fu_852_p3),14));
    ImagLoc_x_cast_mux_fu_852_p3 <= 
        ImagLoc_x_reg_1687 when (or_cond_i_i_fu_843_p2(0) = '1') else 
        ap_const_lv13_0;
    ImagLoc_x_fu_791_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_98_cast_fu_760_p1));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2, tmp_52_fu_384_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_52_fu_384_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_52_fu_384_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_52_fu_384_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1272 assign process. --
    ap_sig_bdd_1272_assign_proc : process(ap_reg_ppiten_pp0_it5, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)
    begin
                ap_sig_bdd_1272 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)));
    end process;


    -- ap_sig_bdd_1273 assign process. --
    ap_sig_bdd_1273_assign_proc : process(icmp_reg_1499, tmp_356_1_reg_1508)
    begin
                ap_sig_bdd_1273 <= ((ap_const_lv1_0 = icmp_reg_1499) and not((ap_const_lv1_0 = tmp_356_1_reg_1508)));
    end process;


    -- ap_sig_bdd_1275 assign process. --
    ap_sig_bdd_1275_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499)
    begin
                ap_sig_bdd_1275 <= (not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)));
    end process;


    -- ap_sig_bdd_1278 assign process. --
    ap_sig_bdd_1278_assign_proc : process(icmp_reg_1499, tmp_56_reg_1504)
    begin
                ap_sig_bdd_1278 <= ((ap_const_lv1_0 = icmp_reg_1499) and not((ap_const_lv1_0 = tmp_56_reg_1504)));
    end process;


    -- ap_sig_bdd_154 assign process. --
    ap_sig_bdd_154_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_154 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_182 assign process. --
    ap_sig_bdd_182_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_182 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_198 assign process. --
    ap_sig_bdd_198_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_198 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_227 assign process. --
    ap_sig_bdd_227_assign_proc : process(p_src_data_stream_V_empty_n, tmp_54_reg_1490, icmp_reg_1499, ap_reg_ppstg_tmp_80_reg_1678_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)
    begin
                ap_sig_bdd_227 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1499)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490))));
    end process;


    -- ap_sig_bdd_25 assign process. --
    ap_sig_bdd_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_251 assign process. --
    ap_sig_bdd_251_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond_i_reg_1709_pp0_it11)
    begin
                ap_sig_bdd_251 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it11)));
    end process;


    -- ap_sig_bdd_494 assign process. --
    ap_sig_bdd_494_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_494 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_60 assign process. --
    ap_sig_bdd_60_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_60 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_91 assign process. --
    ap_sig_bdd_91_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_91 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_5 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_5_assign_proc : process(ap_sig_bdd_198)
    begin
        if (ap_sig_bdd_198) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_6 assign process. --
    ap_sig_cseq_ST_st19_fsm_6_assign_proc : process(ap_sig_bdd_494)
    begin
        if (ap_sig_bdd_494) then 
            ap_sig_cseq_ST_st19_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_25)
    begin
        if (ap_sig_bdd_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_60)
    begin
        if (ap_sig_bdd_60) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_91)
    begin
        if (ap_sig_bdd_91) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_154)
    begin
        if (ap_sig_bdd_154) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_182)
    begin
        if (ap_sig_bdd_182) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_847_p2 <= (or_cond_i_i_fu_843_p2 or tmp_47_reg_1467);
    brmerge2_fu_671_p2 <= (or_cond_i422_i_fu_634_p2 or tmp_44_reg_1453);
    brmerge3_fu_689_p2 <= (or_cond_i422_i_1_fu_648_p2 or tmp_44_reg_1453);
    brmerge4_fu_707_p2 <= (or_cond_i422_i_2_fu_662_p2 or tmp_44_reg_1453);
    brmerge_fu_889_p2 <= (rev_reg_1658 or tmp_84_reg_1697);
    col_assign_6_t_fu_907_p2 <= std_logic_vector(unsigned(tmp_51_reg_1477) - unsigned(tmp_104_fu_903_p1));
        col_assign_cast_fu_912_p1 <= std_logic_vector(resize(signed(x_reg_1744),32));

    col_buf_0_val_0_0_fu_951_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_ppstg_brmerge_reg_1737_pp0_it3(0) = '1') else 
        tmp_90_fu_940_p5;
    col_buf_0_val_1_0_fu_969_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_ppstg_brmerge_reg_1737_pp0_it3(0) = '1') else 
        tmp_91_fu_958_p5;
    col_buf_0_val_2_0_fu_987_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_ppstg_brmerge_reg_1737_pp0_it3(0) = '1') else 
        tmp_92_fu_976_p5;
    cols_cast_fu_289_p1 <= std_logic_vector(resize(unsigned(p_src_cols_V_read),13));

    -- grp_fu_1248_ce assign process. --
    grp_fu_1248_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1248_ce <= ap_const_logic_1;
        else 
            grp_fu_1248_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1248_p0 <= grp_fu_1248_p00(8 - 1 downto 0);
    grp_fu_1248_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_src_kernel_win_0_val_1_1_lo_reg_1825_pp0_it7),21));
    grp_fu_1248_p1 <= ap_const_lv21_9D8(13 - 1 downto 0);

    -- grp_fu_1255_ce assign process. --
    grp_fu_1255_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1255_ce <= ap_const_logic_1;
        else 
            grp_fu_1255_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1255_p0 <= grp_fu_1255_p00(8 - 1 downto 0);
    grp_fu_1255_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_1_1_1_fu_148),20));
    grp_fu_1255_p1 <= ap_const_lv20_7A1(12 - 1 downto 0);

    -- grp_fu_1262_ce assign process. --
    grp_fu_1262_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1262_ce <= ap_const_logic_1;
        else 
            grp_fu_1262_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1262_p0 <= grp_fu_1262_p00(8 - 1 downto 0);
    grp_fu_1262_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1814_pp0_it6),20));
    grp_fu_1262_p1 <= ap_const_lv20_5E9(12 - 1 downto 0);

    -- grp_fu_1269_ce assign process. --
    grp_fu_1269_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1269_ce <= ap_const_logic_1;
        else 
            grp_fu_1269_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1269_p0 <= grp_fu_1269_p00(8 - 1 downto 0);
    grp_fu_1269_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_1_fu_156),20));
    grp_fu_1269_p1 <= ap_const_lv20_5E9(12 - 1 downto 0);

    -- grp_fu_1275_ce assign process. --
    grp_fu_1275_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1275_ce <= ap_const_logic_1;
        else 
            grp_fu_1275_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1275_p0 <= grp_fu_1275_p00(8 - 1 downto 0);
    grp_fu_1275_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_1_fu_140),20));
    grp_fu_1275_p1 <= ap_const_lv20_5E9(12 - 1 downto 0);
    grp_fu_1275_p2 <= grp_fu_1275_p20(21 - 1 downto 0);
    grp_fu_1275_p20 <= std_logic_vector(resize(unsigned(p_Val2_17_1_reg_1880),22));

    -- grp_fu_1283_ce assign process. --
    grp_fu_1283_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1283_ce <= ap_const_logic_1;
        else 
            grp_fu_1283_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1283_p0 <= grp_fu_1283_p00(8 - 1 downto 0);
    grp_fu_1283_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_0_fu_1066_p3),20));
    grp_fu_1283_p1 <= ap_const_lv20_5E9(12 - 1 downto 0);

    -- grp_fu_1290_ce assign process. --
    grp_fu_1290_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1290_ce <= ap_const_logic_1;
        else 
            grp_fu_1290_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1290_p0 <= grp_fu_1290_p00(8 - 1 downto 0);
    grp_fu_1290_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_lo_reg_1850),20));
    grp_fu_1290_p1 <= ap_const_lv20_7A1(12 - 1 downto 0);
    grp_fu_1290_p2 <= grp_fu_1290_p20(20 - 1 downto 0);
    grp_fu_1290_p20 <= std_logic_vector(resize(unsigned(tmp35_reg_1900),21));

    -- grp_fu_1298_ce assign process. --
    grp_fu_1298_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1298_ce <= ap_const_logic_1;
        else 
            grp_fu_1298_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1298_p0 <= grp_fu_1298_p00(8 - 1 downto 0);
    grp_fu_1298_p00 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_fu_152),20));
    grp_fu_1298_p1 <= ap_const_lv20_7A1(12 - 1 downto 0);

    -- grp_fu_1306_ce assign process. --
    grp_fu_1306_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1306_ce <= ap_const_logic_1;
        else 
            grp_fu_1306_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1306_p0 <= grp_fu_1306_p00(8 - 1 downto 0);
    grp_fu_1306_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1820_pp0_it6),20));
    grp_fu_1306_p1 <= ap_const_lv20_7A1(12 - 1 downto 0);
    heightloop_fu_299_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(rows_cast_reg_1331));
    i_V_fu_389_p2 <= std_logic_vector(unsigned(p_014_0_i_reg_263) + unsigned(ap_const_lv12_1));
    icmp3_fu_785_p2 <= "0" when (tmp_100_fu_775_p4 = ap_const_lv11_0) else "1";
    icmp_fu_415_p2 <= "0" when (tmp_55_fu_405_p4 = ap_const_lv11_0) else "1";
    j_V_fu_769_p2 <= std_logic_vector(unsigned(p_027_0_i_reg_274) + unsigned(ap_const_lv12_1));
    k_buf_0_val_3_address0 <= tmp_89_fu_915_p1(10 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1756;

    -- k_buf_0_val_3_ce0 assign process. --
    k_buf_0_val_3_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_3_ce1 assign process. --
    k_buf_0_val_3_ce1_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, tmp_356_2_reg_1512, ap_reg_ppstg_tmp_80_reg_1678_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_356_2_reg_1512))))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_3_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_3_we1 assign process. --
    k_buf_0_val_3_we1_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, tmp_356_2_reg_1512, ap_reg_ppstg_tmp_80_reg_1678_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_356_2_reg_1512))))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_89_fu_915_p1(10 - 1 downto 0);
    k_buf_0_val_4_address1 <= ap_reg_ppstg_k_buf_0_val_4_addr_reg_1762_pp0_it4;

    -- k_buf_0_val_4_ce0 assign process. --
    k_buf_0_val_4_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_ce1 assign process. --
    k_buf_0_val_4_ce1_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, tmp_356_1_reg_1508, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)
    begin
        if ((((ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)) and not((ap_const_lv1_0 = tmp_356_1_reg_1508))) or (not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4))))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_d1 assign process. --
    k_buf_0_val_4_d1_assign_proc : process(k_buf_0_val_3_load_reg_1774, tmp_112_reg_1808, ap_sig_bdd_1273, ap_sig_bdd_1275, ap_sig_bdd_1272)
    begin
        if (ap_sig_bdd_1272) then
            if (ap_sig_bdd_1275) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1774;
            elsif (ap_sig_bdd_1273) then 
                k_buf_0_val_4_d1 <= tmp_112_reg_1808;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_4_we1 assign process. --
    k_buf_0_val_4_we1_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, tmp_356_1_reg_1508, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)
    begin
        if ((((ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)) and not((ap_const_lv1_0 = tmp_356_1_reg_1508))) or (not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4))))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_89_fu_915_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= ap_reg_ppstg_k_buf_0_val_5_addr_reg_1768_pp0_it4;

    -- k_buf_0_val_5_ce0 assign process. --
    k_buf_0_val_5_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_ce1 assign process. --
    k_buf_0_val_5_ce1_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, tmp_56_reg_1504, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)
    begin
        if (((not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4))) or ((ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)) and not((ap_const_lv1_0 = tmp_56_reg_1504))))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_d1 assign process. --
    k_buf_0_val_5_d1_assign_proc : process(k_buf_0_val_4_load_reg_1787, tmp_112_reg_1808, ap_sig_bdd_1275, ap_sig_bdd_1272, ap_sig_bdd_1278)
    begin
        if (ap_sig_bdd_1272) then
            if (ap_sig_bdd_1275) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1787;
            elsif (ap_sig_bdd_1278) then 
                k_buf_0_val_5_d1 <= tmp_112_reg_1808;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_5_we1 assign process. --
    k_buf_0_val_5_we1_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, tmp_56_reg_1504, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)
    begin
        if (((not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4))) or ((ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it4)) and not((ap_const_lv1_0 = tmp_56_reg_1504))))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_carry_fu_1236_p2 <= (tmp_110_reg_1920 or p_Result_2_i_i_not_reg_1925);
    not_tmp_s_fu_321_p2 <= "0" when (p_src_rows_V_read = ap_const_lv12_1) else "1";
    or_cond_i422_i_1_fu_648_p2 <= (tmp_382_1_reg_1543 and rev4_fu_643_p2);
    or_cond_i422_i_2_fu_662_p2 <= (tmp_382_2_reg_1558 and rev5_fu_657_p2);
    or_cond_i422_i_fu_634_p2 <= (tmp_60_reg_1528 and rev3_fu_629_p2);
    or_cond_i_fu_838_p2 <= (icmp_reg_1499 and icmp3_fu_785_p2);
    or_cond_i_i_fu_843_p2 <= (tmp_84_reg_1697 and rev6_reg_1692);
    p_Result_2_i_i_not_fu_1230_p2 <= (tmp_109_fu_1208_p3 xor ap_const_lv1_1);
    p_Val2_17_0_1_cast_fu_1154_p1 <= std_logic_vector(resize(unsigned(p_Val2_17_0_1_reg_1855),21));
    p_Val2_17_1_fu_1160_p2 <= std_logic_vector(unsigned(tmp28_cast_fu_1157_p1) + unsigned(p_Val2_17_0_1_cast_fu_1154_p1));
    p_Val2_1_fu_1181_p2 <= std_logic_vector(unsigned(tmp34_cast_fu_1178_p1) + unsigned(tmp32_reg_1905));
    p_Val2_2_fu_1186_p4 <= p_Val2_1_fu_1181_p2(21 downto 14);
    p_Val2_3_fu_1216_p2 <= std_logic_vector(unsigned(p_Val2_2_fu_1186_p4) + unsigned(tmp_34_i_i_fu_1204_p1));
    p_anchor_4_1_cast_fu_326_p1 <= std_logic_vector(resize(unsigned(not_tmp_s_fu_321_p2),13));
    p_assign_14_1_fu_491_p2 <= std_logic_vector(signed(ap_const_lv13_1FFE) + signed(tmp_94_cast_fu_380_p1));
    p_assign_14_2_fu_539_p2 <= std_logic_vector(signed(ap_const_lv13_1FFD) + signed(tmp_94_cast_fu_380_p1));
    p_assign_15_1_fu_518_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) - unsigned(tmp_94_cast_fu_380_p1));
    p_assign_15_2_fu_566_p2 <= std_logic_vector(unsigned(ap_const_lv13_3) - unsigned(tmp_94_cast_fu_380_p1));
    p_assign_3_fu_824_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) - unsigned(tmp_98_cast_fu_760_p1));
    p_assign_4_fu_870_p2 <= std_logic_vector(unsigned(tmp_50_reg_1472) - unsigned(p_p2_i_i_cast_fu_863_p1));
    p_assign_s_fu_470_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) - unsigned(tmp_94_cast_fu_380_p1));
    p_dst_data_stream_V_din <= 
        p_Val2_3_reg_1915 when (not_carry_fu_1236_p2(0) = '1') else 
        ap_const_lv8_FF;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_or_cond_i_reg_1709_pp0_it11, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1709_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg391_i_cast_fu_312_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_fu_309_p1));
    p_p2_i423_i_1_fu_524_p3 <= 
        p_assign_15_1_fu_518_p2 when (tmp_66_fu_510_p3(0) = '1') else 
        p_assign_14_1_fu_491_p2;
    p_p2_i423_i_2_fu_572_p3 <= 
        p_assign_15_2_fu_566_p2 when (tmp_70_fu_558_p3(0) = '1') else 
        p_assign_14_2_fu_539_p2;
    p_p2_i423_i_fu_476_p3 <= 
        p_assign_s_fu_470_p2 when (tmp_61_fu_462_p3(0) = '1') else 
        tmp_58_fu_443_p2;
        p_p2_i_i_cast_fu_863_p1 <= std_logic_vector(resize(signed(p_p2_i_i_reg_1703),14));

    p_p2_i_i_fu_830_p3 <= 
        p_assign_3_fu_824_p2 when (tmp_103_fu_816_p3(0) = '1') else 
        ImagLoc_x_fu_791_p2;

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(tmp_54_reg_1490, icmp_reg_1499, ap_reg_ppstg_tmp_80_reg_1678_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_251, ap_reg_ppiten_pp0_it12)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1499) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_80_reg_1678_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1713_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1499)) and not((ap_const_lv1_0 = tmp_54_reg_1490)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_251 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev3_fu_629_p2 <= (tmp_59_reg_1523 xor ap_const_lv1_1);
    rev4_fu_643_p2 <= (tmp_65_reg_1538 xor ap_const_lv1_1);
    rev5_fu_657_p2 <= (tmp_69_reg_1553 xor ap_const_lv1_1);
    rev6_fu_805_p2 <= (tmp_101_fu_797_p3 xor ap_const_lv1_1);
    rev_fu_725_p2 <= (ult_reg_1494 xor ap_const_lv1_1);
    row_assign_13_1_t_fu_745_p2 <= std_logic_vector(unsigned(p_neg391_i_cast_reg_1441) - unsigned(tmp_88_fu_740_p3));
    row_assign_13_2_t_fu_755_p2 <= std_logic_vector(unsigned(p_neg391_i_cast_reg_1441) - unsigned(tmp_99_fu_750_p3));
    row_assign_s_fu_735_p2 <= std_logic_vector(unsigned(p_neg391_i_cast_reg_1441) - unsigned(tmp_78_fu_730_p3));
    rows_cast_fu_285_p1 <= std_logic_vector(resize(unsigned(p_src_rows_V_read),13));
    sel_tmp1_fu_893_p2 <= (tmp_86_reg_1722 and sel_tmp9_reg_1732);
    sel_tmp9_fu_883_p2 <= (brmerge1_fu_847_p2 xor ap_const_lv1_1);
    sel_tmp_fu_875_p3 <= 
        ImagLoc_x_cast_mux_cast_fu_859_p1 when (brmerge1_fu_847_p2(0) = '1') else 
        p_assign_4_fu_870_p2;
    src_kernel_win_0_val_0_0_fu_1038_p3 <= 
        tmp_97_fu_1030_p5 when (tmp_57_reg_1516(0) = '1') else 
        col_buf_0_val_0_0_reg_1779;
    src_kernel_win_0_val_1_0_fu_1052_p3 <= 
        tmp_102_fu_1044_p5 when (tmp_57_reg_1516(0) = '1') else 
        col_buf_0_val_1_0_reg_1792;
    src_kernel_win_0_val_2_0_fu_1066_p3 <= 
        tmp_105_fu_1058_p5 when (tmp_57_reg_1516(0) = '1') else 
        col_buf_0_val_2_0_reg_1800;
    tmp28_cast_fu_1157_p1 <= std_logic_vector(resize(unsigned(tmp28_reg_1860),21));
    tmp34_cast_fu_1178_p1 <= std_logic_vector(resize(unsigned(tmp34_reg_1910),22));
    tmp_100_fu_775_p4 <= p_027_0_i_reg_274(11 downto 1);
    tmp_101_fu_797_p3 <= ImagLoc_x_fu_791_p2(12 downto 12);
    tmp_103_fu_816_p3 <= ImagLoc_x_fu_791_p2(12 downto 12);
    tmp_104_fu_903_p1 <= x_fu_897_p3(2 - 1 downto 0);
    tmp_108_cast_fu_364_p1 <= std_logic_vector(resize(unsigned(tmp_49_fu_357_p3),14));
    tmp_108_fu_1196_p3 <= p_Val2_1_fu_1181_p2(13 downto 13);
    tmp_109_fu_1208_p3 <= p_Val2_1_fu_1181_p2(21 downto 21);
    tmp_34_i_i_fu_1204_p1 <= std_logic_vector(resize(unsigned(tmp_108_fu_1196_p3),8));
    tmp_356_1_fu_426_p2 <= "1" when (p_014_0_i_reg_263 = ap_const_lv12_0) else "0";
    tmp_356_2_fu_432_p2 <= "1" when (p_014_0_i_reg_263 = ap_const_lv12_1) else "0";
    tmp_382_1_fu_505_p2 <= "1" when (signed(p_assign_14_1_fu_491_p2) < signed(rows_cast_reg_1331)) else "0";
    tmp_382_2_fu_553_p2 <= "1" when (signed(p_assign_14_2_fu_539_p2) < signed(rows_cast_reg_1331)) else "0";
    tmp_392_1_fu_653_p2 <= "1" when (signed(p_p2_i423_i_1_reg_1548) < signed(rows_cast_reg_1331)) else "0";
    tmp_392_2_fu_667_p2 <= "1" when (signed(p_p2_i423_i_2_reg_1563) < signed(rows_cast_reg_1331)) else "0";
    tmp_394_cast_fu_342_p1 <= std_logic_vector(resize(unsigned(tmp_45_fu_335_p3),14));
    tmp_43_fu_293_p2 <= (tmp_s_reg_252 xor ap_const_lv1_1);
    tmp_44_fu_330_p2 <= "1" when (p_src_rows_V_read = ap_const_lv12_1) else "0";
    tmp_45_fu_335_p3 <= (p_src_rows_V_read & ap_const_lv1_0);
    tmp_46_fu_346_p2 <= std_logic_vector(unsigned(ap_const_lv14_2) + unsigned(tmp_394_cast_fu_342_p1));
    tmp_47_fu_352_p2 <= "1" when (p_src_cols_V_read = ap_const_lv12_1) else "0";
    tmp_48_fu_318_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    tmp_49_fu_357_p3 <= (p_src_cols_V_read & ap_const_lv1_0);
    tmp_50_fu_368_p2 <= std_logic_vector(signed(ap_const_lv14_3FFE) + signed(tmp_108_cast_fu_364_p1));
    tmp_51_fu_374_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_48_fu_318_p1));
    tmp_52_fu_384_p2 <= "1" when (unsigned(tmp_94_cast_fu_380_p1) < unsigned(heightloop_reg_1431)) else "0";
    tmp_54_fu_395_p2 <= "1" when (unsigned(p_014_0_i_reg_263) < unsigned(p_src_rows_V_read)) else "0";
    tmp_55_fu_405_p4 <= p_014_0_i_reg_263(11 downto 1);
    tmp_56_fu_421_p2 <= "1" when (p_anchor_4_1_cast_reg_1448 = tmp_94_cast_fu_380_p1) else "0";
    tmp_57_fu_438_p2 <= "1" when (unsigned(p_014_0_i_reg_263) > unsigned(p_src_rows_V_read)) else "0";
    tmp_58_fu_443_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_94_cast_fu_380_p1));
    tmp_60_fu_457_p2 <= "1" when (signed(tmp_58_fu_443_p2) < signed(rows_cast_reg_1331)) else "0";
    tmp_61_fu_462_p3 <= tmp_58_fu_443_p2(12 downto 12);
    tmp_62_fu_639_p2 <= "1" when (signed(p_p2_i423_i_reg_1533) < signed(rows_cast_reg_1331)) else "0";
    tmp_63_fu_484_p1 <= tmp_46_reg_1460(2 - 1 downto 0);
    tmp_64_fu_487_p1 <= p_p2_i423_i_fu_476_p3(2 - 1 downto 0);
    tmp_66_fu_510_p3 <= p_assign_14_1_fu_491_p2(12 downto 12);
    tmp_67_fu_532_p1 <= tmp_46_reg_1460(2 - 1 downto 0);
    tmp_68_fu_535_p1 <= p_p2_i423_i_1_fu_524_p3(2 - 1 downto 0);
    tmp_70_fu_558_p3 <= p_assign_14_2_fu_539_p2(12 downto 12);
    tmp_71_fu_580_p1 <= tmp_46_reg_1460(2 - 1 downto 0);
    tmp_72_fu_583_p1 <= p_p2_i423_i_2_fu_572_p3(2 - 1 downto 0);
    tmp_73_fu_587_p1 <= tmp_58_fu_443_p2(2 - 1 downto 0);
    tmp_74_fu_676_p3 <= 
        tmp_73_reg_1568 when (or_cond_i422_i_fu_634_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_75_fu_591_p1 <= p_p2_i423_i_fu_476_p3(2 - 1 downto 0);
    tmp_76_fu_595_p2 <= std_logic_vector(unsigned(tmp_63_fu_484_p1) - unsigned(tmp_64_fu_487_p1));
    tmp_77_fu_683_p3 <= 
        tmp_75_reg_1573 when (tmp_62_fu_639_p2(0) = '1') else 
        tmp_76_reg_1578;
    tmp_78_fu_730_p3 <= 
        tmp_74_reg_1618 when (brmerge2_reg_1613(0) = '1') else 
        tmp_77_reg_1623;
    tmp_79_fu_601_p1 <= p_assign_14_1_fu_491_p2(2 - 1 downto 0);
    tmp_80_fu_764_p2 <= "1" when (unsigned(tmp_98_cast_fu_760_p1) < unsigned(widthloop_reg_1436)) else "0";
    tmp_82_fu_694_p3 <= 
        tmp_79_reg_1583 when (or_cond_i422_i_1_fu_648_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_83_fu_605_p1 <= p_p2_i423_i_1_fu_524_p3(2 - 1 downto 0);
    tmp_84_fu_811_p2 <= "1" when (signed(ImagLoc_x_fu_791_p2) < signed(cols_cast_reg_1342)) else "0";
    tmp_85_fu_609_p2 <= std_logic_vector(unsigned(tmp_67_fu_532_p1) - unsigned(tmp_68_fu_535_p1));
    tmp_86_fu_866_p2 <= "1" when (signed(p_p2_i_i_reg_1703) < signed(cols_cast_reg_1342)) else "0";
    tmp_87_fu_701_p3 <= 
        tmp_83_reg_1588 when (tmp_392_1_fu_653_p2(0) = '1') else 
        tmp_85_reg_1593;
    tmp_88_fu_740_p3 <= 
        tmp_82_reg_1633 when (brmerge3_reg_1628(0) = '1') else 
        tmp_87_reg_1638;
    tmp_89_fu_915_p1 <= std_logic_vector(resize(unsigned(col_assign_cast_fu_912_p1),64));
    tmp_93_fu_615_p1 <= p_assign_14_2_fu_539_p2(2 - 1 downto 0);
    tmp_94_cast_fu_380_p1 <= std_logic_vector(resize(unsigned(p_014_0_i_reg_263),13));
    tmp_94_fu_712_p3 <= 
        tmp_93_reg_1598 when (or_cond_i422_i_2_fu_662_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_95_fu_619_p1 <= p_p2_i423_i_2_fu_572_p3(2 - 1 downto 0);
    tmp_96_fu_623_p2 <= std_logic_vector(unsigned(tmp_71_fu_580_p1) - unsigned(tmp_72_fu_583_p1));
    tmp_98_cast_fu_760_p1 <= std_logic_vector(resize(unsigned(p_027_0_i_reg_274),13));
    tmp_98_fu_719_p3 <= 
        tmp_95_reg_1603 when (tmp_392_2_fu_667_p2(0) = '1') else 
        tmp_96_reg_1608;
    tmp_99_fu_750_p3 <= 
        tmp_94_reg_1648 when (brmerge4_reg_1643(0) = '1') else 
        tmp_98_reg_1653;
    tmp_fu_309_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_s_phi_fu_256_p4 <= tmp_s_reg_252;
    ult_fu_400_p2 <= "1" when (unsigned(p_014_0_i_reg_263) < unsigned(p_src_rows_V_read)) else "0";
    widthloop_fu_304_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(cols_cast_reg_1342));
    x_fu_897_p3 <= 
        p_p2_i_i_cast_reg_1717 when (sel_tmp1_fu_893_p2(0) = '1') else 
        sel_tmp_reg_1727;
end behav;
