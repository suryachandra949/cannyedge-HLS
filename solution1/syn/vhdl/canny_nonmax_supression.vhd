-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_nonmax_supression is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    grad_out_data_stream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    grad_out_data_stream_V_empty_n : IN STD_LOGIC;
    grad_out_data_stream_V_read : OUT STD_LOGIC;
    supressed_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    supressed_data_stream_V_full_n : IN STD_LOGIC;
    supressed_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of canny_nonmax_supression is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_401 : STD_LOGIC_VECTOR (10 downto 0) := "10000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal p_1_reg_180 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_1_reg_180_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_45 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal tmp_3_reg_704 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_54 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal or_cond4_reg_736 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_736_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_69 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal exitcond1_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal i_V_fu_198_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_680 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_685 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_695_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_232_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_V_reg_699 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_tmp_3_reg_704_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_7_reg_708_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal Buffer_val_1_addr_reg_715 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_Buffer_val_1_addr_reg_715_pp0_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp9_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_reg_726 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_736_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_736_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_736_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Buffer_val_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp1_reg_740 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond2_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_745 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_745_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_745_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_386_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_reg_750 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp2_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_755 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_761 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_468_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_reg_766 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_771 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_524_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_reg_776 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pixel_val_2_fu_571_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_pixel_val_2_reg_781 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_786 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_611_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_796 : STD_LOGIC_VECTOR (7 downto 0);
    signal Buffer_val_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_0_ce0 : STD_LOGIC;
    signal Buffer_val_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_0_ce1 : STD_LOGIC;
    signal Buffer_val_0_we1 : STD_LOGIC;
    signal Buffer_val_0_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Buffer_val_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_1_ce0 : STD_LOGIC;
    signal Buffer_val_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Buffer_val_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_1_ce1 : STD_LOGIC;
    signal Buffer_val_1_we1 : STD_LOGIC;
    signal Buffer_val_1_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_s_reg_168 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_bdd_197 : BOOLEAN;
    signal ap_reg_phibuf_p_s_reg_168 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_nseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_207 : BOOLEAN;
    signal p_1_phi_fu_184_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp1_s_fu_76 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp2_s_fu_80 : STD_LOGIC_VECTOR (15 downto 0);
    signal pixel_value_s_fu_84 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_0_1_fu_88 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_0_0_0_Win_val_0_0_1_fu_375_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_0_1_1_fu_92 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_1_1_fu_96 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_1_0_0_Win_val_1_0_1_fu_368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_1_1_1_fu_100 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_2_1_fu_104 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_2_0_0_Win_val_2_0_1_fu_361_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Win_val_2_1_1_fu_108 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_204_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_238_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_fu_266_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp1_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_dir_fu_382_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_440_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_450_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_430_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_496_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_506_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_486_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_516_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ga_fu_583_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal gb_fu_578_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond3_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pixel_val_fu_604_p3 : STD_LOGIC_VECTOR (7 downto 0);

    component canny_nonmax_supression_Buffer_val_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    Buffer_val_0_U : component canny_nonmax_supression_Buffer_val_0
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Buffer_val_0_address0,
        ce0 => Buffer_val_0_ce0,
        q0 => Buffer_val_0_q0,
        address1 => Buffer_val_0_address1,
        ce1 => Buffer_val_0_ce1,
        we1 => Buffer_val_0_we1,
        d1 => Buffer_val_0_d1);

    Buffer_val_1_U : component canny_nonmax_supression_Buffer_val_0
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Buffer_val_1_address0,
        ce0 => Buffer_val_1_ce0,
        q0 => Buffer_val_1_q0,
        address1 => Buffer_val_1_address1,
        ce1 => Buffer_val_1_ce1,
        we1 => Buffer_val_1_we1,
        d1 => Buffer_val_1_d1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_192_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_226_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_192_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = exitcond_fu_226_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_192_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_226_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_192_p2))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_1_reg_180 assign process. --
    p_1_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = exitcond_reg_695))) then 
                p_1_reg_180 <= j_V_reg_699;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_192_p2))) then 
                p_1_reg_180 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_s_reg_168 assign process. --
    p_s_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_226_p2)) and (ap_const_logic_1 = ap_sig_nseq_ST_st2_fsm_1))) then 
                p_s_reg_168 <= i_V_reg_680;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_1 = ap_sig_nseq_ST_st2_fsm_1))) then 
                p_s_reg_168 <= ap_reg_phibuf_p_s_reg_168;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_197))) then 
                p_s_reg_168 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = exitcond_fu_226_p2) and (ap_const_lv1_0 = tmp_7_fu_252_p3))) then
                Buffer_val_1_addr_reg_715 <= tmp_8_fu_260_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_695_pp0_it1))) then
                Win_val_0_1_1_fu_92 <= Win_val_0_1_fu_88;
                Win_val_0_1_fu_88 <= Win_val_0_0_0_Win_val_0_0_1_fu_375_p3;
                Win_val_1_1_1_fu_100 <= Win_val_1_1_fu_96;
                Win_val_1_1_fu_96 <= Win_val_1_0_0_Win_val_1_0_1_fu_368_p3;
                Win_val_2_1_1_fu_108 <= Win_val_2_1_fu_104;
                Win_val_2_1_fu_104 <= Win_val_2_0_0_Win_val_2_0_1_fu_361_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_226_p2)))) then
                ap_reg_phibuf_p_s_reg_168 <= i_V_reg_680;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                ap_reg_ppstg_Buffer_val_1_addr_reg_715_pp0_it1 <= Buffer_val_1_addr_reg_715;
                ap_reg_ppstg_exitcond_reg_695_pp0_it1 <= exitcond_reg_695;
                ap_reg_ppstg_or_cond4_reg_736_pp0_it1 <= or_cond4_reg_736;
                ap_reg_ppstg_p_1_reg_180_pp0_it1 <= p_1_reg_180;
                ap_reg_ppstg_tmp_3_reg_704_pp0_it1 <= tmp_3_reg_704;
                ap_reg_ppstg_tmp_7_reg_708_pp0_it1 <= tmp_7_reg_708;
                exitcond_reg_695 <= exitcond_fu_226_p2;
                or_cond2_reg_745 <= or_cond2_fu_321_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then
                ap_reg_ppstg_or_cond2_reg_745_pp0_it2 <= or_cond2_reg_745;
                ap_reg_ppstg_or_cond2_reg_745_pp0_it3 <= ap_reg_ppstg_or_cond2_reg_745_pp0_it2;
                ap_reg_ppstg_or_cond4_reg_736_pp0_it2 <= ap_reg_ppstg_or_cond4_reg_736_pp0_it1;
                ap_reg_ppstg_or_cond4_reg_736_pp0_it3 <= ap_reg_ppstg_or_cond4_reg_736_pp0_it2;
                ap_reg_ppstg_or_cond4_reg_736_pp0_it4 <= ap_reg_ppstg_or_cond4_reg_736_pp0_it3;
                    tmp_33_reg_796(7 downto 2) <= tmp_33_fu_611_p3(7 downto 2);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_V_reg_680 <= i_V_fu_198_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_192_p2))) then
                icmp_reg_685 <= icmp_fu_214_p2;
                tmp_2_reg_690 <= tmp_2_fu_220_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                j_V_reg_699 <= j_V_fu_232_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = exitcond_fu_226_p2))) then
                or_cond4_reg_736 <= or_cond4_fu_301_p2;
                tmp9_reg_726 <= tmp9_fu_282_p2;
                tmp_21_reg_731 <= tmp_4_fu_238_p2(10 downto 10);
                tmp_3_reg_704 <= tmp_4_fu_238_p2(10 downto 10);
                tmp_7_reg_708 <= p_1_phi_fu_184_p4(10 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_745_pp0_it2))) then
                    out_pixel_val_2_reg_781(7 downto 2) <= out_pixel_val_2_fu_571_p3(7 downto 2);
                tmp_14_reg_786 <= tmp_14_fu_588_p2;
                tmp_15_reg_791 <= tmp_15_fu_594_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (tmp_3_reg_704 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                pixel_value_s_fu_84 <= grad_out_data_stream_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = or_cond2_reg_745))) then
                sel_tmp2_reg_755 <= sel_tmp2_fu_414_p2;
                tmp_11_reg_761 <= Win_val_0_1_1_fu_92(9 downto 2);
                tmp_12_reg_750 <= tmp_12_fu_386_p1;
                tmp_13_reg_771 <= Win_val_2_0_0_Win_val_2_0_1_fu_361_p3(9 downto 2);
                tmp_27_reg_766 <= tmp_27_fu_468_p3;
                tmp_32_reg_776 <= tmp_32_fu_524_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = tmp_7_reg_708))) then
                temp1_reg_740 <= Buffer_val_0_q0;
                temp1_s_fu_76 <= Buffer_val_0_q0;
                temp2_s_fu_80 <= Buffer_val_1_q0;
            end if;
        end if;
    end process;
    out_pixel_val_2_reg_781(1 downto 0) <= "00";
    tmp_33_reg_796(1 downto 0) <= "00";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5, exitcond1_fu_192_p2, exitcond_fu_226_p2, ap_sig_bdd_197)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_197)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_192_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_226_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not((ap_const_lv1_0 = exitcond_fu_226_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    Buffer_val_0_address0 <= tmp_8_fu_260_p1(10 - 1 downto 0);
    Buffer_val_0_address1 <= tmp_9_fu_329_p1(10 - 1 downto 0);

    -- Buffer_val_0_ce0 assign process. --
    Buffer_val_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            Buffer_val_0_ce0 <= ap_const_logic_1;
        else 
            Buffer_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Buffer_val_0_ce1 assign process. --
    Buffer_val_0_ce1_assign_proc : process(ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            Buffer_val_0_ce1 <= ap_const_logic_1;
        else 
            Buffer_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Buffer_val_0_d1 <= pixel_value_s_fu_84;

    -- Buffer_val_0_we1 assign process. --
    Buffer_val_0_we1_assign_proc : process(ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5, ap_reg_ppstg_tmp_3_reg_704_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_3_reg_704_pp0_it1)))) then 
            Buffer_val_0_we1 <= ap_const_logic_1;
        else 
            Buffer_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    Buffer_val_1_address0 <= tmp_8_fu_260_p1(10 - 1 downto 0);
    Buffer_val_1_address1 <= ap_reg_ppstg_Buffer_val_1_addr_reg_715_pp0_it1;

    -- Buffer_val_1_ce0 assign process. --
    Buffer_val_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            Buffer_val_1_ce0 <= ap_const_logic_1;
        else 
            Buffer_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Buffer_val_1_ce1 assign process. --
    Buffer_val_1_ce1_assign_proc : process(ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            Buffer_val_1_ce1 <= ap_const_logic_1;
        else 
            Buffer_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Buffer_val_1_d1 <= temp1_reg_740;

    -- Buffer_val_1_we1 assign process. --
    Buffer_val_1_we1_assign_proc : process(ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5, ap_reg_ppstg_tmp_7_reg_708_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_7_reg_708_pp0_it1)))) then 
            Buffer_val_1_we1 <= ap_const_logic_1;
        else 
            Buffer_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    Win_val_0_0_0_Win_val_0_0_1_fu_375_p3 <= 
        Win_val_0_1_fu_88 when (ap_reg_ppstg_tmp_7_reg_708_pp0_it1(0) = '1') else 
        pixel_value_s_fu_84;
    Win_val_1_0_0_Win_val_1_0_1_fu_368_p3 <= 
        Win_val_1_1_fu_96 when (ap_reg_ppstg_tmp_7_reg_708_pp0_it1(0) = '1') else 
        temp1_s_fu_76;
    Win_val_2_0_0_Win_val_2_0_1_fu_361_p3 <= 
        Win_val_2_1_fu_104 when (ap_reg_ppstg_tmp_7_reg_708_pp0_it1(0) = '1') else 
        temp2_s_fu_80;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond1_fu_192_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_192_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond1_fu_192_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_192_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_197 assign process. --
    ap_sig_bdd_197_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_197 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_207 assign process. --
    ap_sig_bdd_207_assign_proc : process(ap_NS_fsm)
    begin
                ap_sig_bdd_207 <= (ap_const_lv1_1 = ap_NS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_45 assign process. --
    ap_sig_bdd_45_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_45 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_54 assign process. --
    ap_sig_bdd_54_assign_proc : process(grad_out_data_stream_V_empty_n, tmp_3_reg_704)
    begin
                ap_sig_bdd_54 <= ((grad_out_data_stream_V_empty_n = ap_const_logic_0) and (tmp_3_reg_704 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_69 assign process. --
    ap_sig_bdd_69_assign_proc : process(supressed_data_stream_V_full_n, ap_reg_ppstg_or_cond4_reg_736_pp0_it4)
    begin
                ap_sig_bdd_69 <= ((supressed_data_stream_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_736_pp0_it4));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_83 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_45)
    begin
        if (ap_sig_bdd_45) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_83)
    begin
        if (ap_sig_bdd_83) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_nseq_ST_st2_fsm_1 assign process. --
    ap_sig_nseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_207)
    begin
        if (ap_sig_bdd_207) then 
            ap_sig_nseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_nseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    current_dir_fu_382_p1 <= Win_val_1_1_fu_96(2 - 1 downto 0);
    exitcond1_fu_192_p2 <= "1" when (p_s_reg_168 = ap_const_lv11_401) else "0";
    exitcond_fu_226_p2 <= "1" when (p_1_phi_fu_184_p4 = ap_const_lv11_401) else "0";
    ga_fu_583_p3 <= 
        tmp_13_reg_771 when (sel_tmp2_reg_755(0) = '1') else 
        tmp_32_reg_776;
    gb_fu_578_p3 <= 
        tmp_11_reg_761 when (sel_tmp2_reg_755(0) = '1') else 
        tmp_27_reg_766;

    -- grad_out_data_stream_V_read assign process. --
    grad_out_data_stream_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, tmp_3_reg_704, ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (tmp_3_reg_704 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            grad_out_data_stream_V_read <= ap_const_logic_1;
        else 
            grad_out_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_198_p2 <= std_logic_vector(unsigned(p_s_reg_168) + unsigned(ap_const_lv11_1));
    icmp1_fu_276_p2 <= "1" when (tmp_20_fu_266_p4 = ap_const_lv10_0) else "0";
    icmp_fu_214_p2 <= "1" when (tmp_fu_204_p4 = ap_const_lv10_0) else "0";
    j_V_fu_232_p2 <= std_logic_vector(unsigned(p_1_phi_fu_184_p4) + unsigned(ap_const_lv11_1));
    or_cond2_fu_321_p2 <= (tmp_21_reg_731 or tmp9_reg_726);
    or_cond3_fu_600_p2 <= (tmp_14_reg_786 and tmp_15_reg_791);
    or_cond4_fu_301_p2 <= (tmp_2_reg_690 or tmp_16_fu_295_p2);
    out_pixel_val_2_fu_571_p3 <= (tmp_12_reg_750 & ap_const_lv2_0);
    out_pixel_val_fu_604_p3 <= 
        out_pixel_val_2_reg_781 when (or_cond3_fu_600_p2(0) = '1') else 
        ap_const_lv8_0;

    -- p_1_phi_fu_184_p4 assign process. --
    p_1_phi_fu_184_p4_assign_proc : process(p_1_reg_180, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_695, j_V_reg_699)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond_reg_695))) then 
            p_1_phi_fu_184_p4 <= j_V_reg_699;
        else 
            p_1_phi_fu_184_p4 <= p_1_reg_180;
        end if; 
    end process;

    sel_tmp1_fu_408_p2 <= (tmp_s_fu_390_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_414_p2 <= (tmp_5_fu_396_p2 and sel_tmp1_fu_408_p2);
    supressed_data_stream_V_din <= tmp_33_reg_796;

    -- supressed_data_stream_V_write assign process. --
    supressed_data_stream_V_write_assign_proc : process(ap_sig_bdd_54, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_or_cond4_reg_736_pp0_it4, ap_sig_bdd_69, ap_reg_ppiten_pp0_it5)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_736_pp0_it4) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_54 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_69 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then 
            supressed_data_stream_V_write <= ap_const_logic_1;
        else 
            supressed_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp9_fu_282_p2 <= (icmp_reg_685 or icmp1_fu_276_p2);
    tmp_10_fu_402_p2 <= "1" when (current_dir_fu_382_p1 = ap_const_lv2_2) else "0";
    tmp_12_fu_386_p1 <= Win_val_1_1_fu_96(6 - 1 downto 0);
    tmp_14_fu_588_p2 <= "1" when (unsigned(out_pixel_val_2_fu_571_p3) > unsigned(ga_fu_583_p3)) else "0";
    tmp_15_fu_594_p2 <= "1" when (unsigned(out_pixel_val_2_fu_571_p3) > unsigned(gb_fu_578_p3)) else "0";
    tmp_16_fu_295_p2 <= "1" when (p_1_phi_fu_184_p4 = ap_const_lv11_0) else "0";
    tmp_20_fu_266_p4 <= p_1_phi_fu_184_p4(10 downto 1);
    tmp_22_fu_430_p4 <= Win_val_1_1_1_fu_100(9 downto 2);
    tmp_24_fu_440_p4 <= Win_val_2_1_fu_104(9 downto 2);
    tmp_25_fu_450_p4 <= Win_val_0_0_0_Win_val_0_0_1_fu_375_p3(9 downto 2);
    tmp_26_fu_460_p3 <= 
        tmp_24_fu_440_p4 when (tmp_10_fu_402_p2(0) = '1') else 
        tmp_25_fu_450_p4;
    tmp_27_fu_468_p3 <= 
        tmp_22_fu_430_p4 when (tmp_s_fu_390_p2(0) = '1') else 
        tmp_26_fu_460_p3;
    tmp_28_fu_486_p4 <= Win_val_1_0_0_Win_val_1_0_1_fu_368_p3(9 downto 2);
    tmp_29_fu_496_p4 <= Win_val_0_1_fu_88(9 downto 2);
    tmp_2_fu_220_p2 <= "1" when (p_s_reg_168 = ap_const_lv11_0) else "0";
    tmp_30_fu_506_p4 <= Win_val_2_1_1_fu_108(9 downto 2);
    tmp_31_fu_516_p3 <= 
        tmp_29_fu_496_p4 when (tmp_10_fu_402_p2(0) = '1') else 
        tmp_30_fu_506_p4;
    tmp_32_fu_524_p3 <= 
        tmp_28_fu_486_p4 when (tmp_s_fu_390_p2(0) = '1') else 
        tmp_31_fu_516_p3;
    tmp_33_fu_611_p3 <= 
        ap_const_lv8_0 when (ap_reg_ppstg_or_cond2_reg_745_pp0_it3(0) = '1') else 
        out_pixel_val_fu_604_p3;
    tmp_4_fu_238_p2 <= (p_1_phi_fu_184_p4 or p_s_reg_168);
    tmp_5_fu_396_p2 <= "1" when (current_dir_fu_382_p1 = ap_const_lv2_1) else "0";
    tmp_7_fu_252_p3 <= p_1_phi_fu_184_p4(10 downto 10);
    tmp_8_fu_260_p1 <= std_logic_vector(resize(unsigned(p_1_phi_fu_184_p4),64));
    tmp_9_fu_329_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_p_1_reg_180_pp0_it1),64));
    tmp_fu_204_p4 <= p_s_reg_168(10 downto 1);
    tmp_s_fu_390_p2 <= "1" when (current_dir_fu_382_p1 = ap_const_lv2_0) else "0";
end behav;
