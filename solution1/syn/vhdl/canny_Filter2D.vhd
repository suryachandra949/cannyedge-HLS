-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of canny_Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_pp0_stg0_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st19_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_402 : STD_LOGIC_VECTOR (10 downto 0) := "10000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_7FE : STD_LOGIC_VECTOR (11 downto 0) := "011111111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_25 : BOOLEAN;
    signal p_027_0_i_reg_292 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_68 : BOOLEAN;
    signal OP2_V_0_1_cast_fu_309_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_1_cast_reg_1300 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_phi_fu_274_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP2_V_0_2_cast_fu_312_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_reg_1305 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_315_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_1310 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_318_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_2_cast_reg_1315 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_321_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_cast_reg_1320 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_1_cast_fu_324_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_2_1_cast_reg_1325 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_fu_337_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1333 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_93 : BOOLEAN;
    signal tmp_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_reg_1342 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_208_1_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_208_1_reg_1356 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_reg_1372 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_1377 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_121_fu_459_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_121_reg_1382 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_122_reg_1387 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_reg_1392 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_515_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_128_reg_1397 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_129_fu_519_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_129_reg_1402 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_fu_523_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_reg_1407 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_134_fu_533_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_134_reg_1412 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_135_fu_541_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_135_reg_1417 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_137_fu_551_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_137_reg_1422 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_106_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_106_reg_1427 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_141 : BOOLEAN;
    signal tmp_107_fu_593_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_107_reg_1432 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_108_fu_598_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_108_reg_1437 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_s_fu_603_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_s_reg_1442 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_157 : BOOLEAN;
    signal row_assign_10_1_t_fu_608_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1447 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_613_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1452 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_171 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_1457_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_196 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal or_cond_i_reg_1495 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_222 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_reg_1457_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1457_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1457_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1457_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_628_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ImagLoc_x_fu_650_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1466 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_139_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_reg_1477 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_698_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_reg_1484 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_p2_i_i_reg_1484_pp0_it1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_142_reg_1490 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1495_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_748_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp_reg_1503 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp8_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_1508 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1513 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1513_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_fu_789_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_143_reg_1520 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_3_addr_reg_1525 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_addr_reg_1531 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_k_buf_0_val_4_addr_reg_1531_pp0_it3 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1537 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_k_buf_0_val_5_addr_reg_1537_pp0_it3 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1543 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_835_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1548 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1556 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_854_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1561 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_873_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1569 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_149_reg_1577 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_924_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_reg_1583 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it8 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_reg_1589 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_fu_952_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_reg_1595 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_lo_2_reg_1611 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_2_s_reg_1616 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1055_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1636 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_965_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_0_1_reg_1641 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_973_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_0_2_reg_1646 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_13_0_2_fu_1084_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_13_0_2_reg_1656 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1001_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1661 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1010_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1666 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1019_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_1_reg_1671 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_13_1_1_fu_1096_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_13_1_1_reg_1676 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1064_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_2_reg_1681 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_fu_1114_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp3_reg_1686 : STD_LOGIC_VECTOR (10 downto 0);
    signal isneg_reg_1691 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_isneg_reg_1691_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_1140_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_5_reg_1697 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_5_reg_1697_pp0_it11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_reg_1702 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i_i_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_1712 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_270 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_014_0_i_reg_281 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_460 : BOOLEAN;
    signal tmp_60_fu_793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_val_0_1_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_2_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_2_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_2_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_2_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_2_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_3_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_115_fu_359_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_50_cast_cast_fu_327_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_45_fu_393_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_118_fu_407_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_7_fu_431_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_119_fu_423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_cast_fu_437_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i423_i_fu_441_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_fu_463_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_assign_6_2_fu_489_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_124_fu_485_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_123_fu_477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_527_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_127_fu_511_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_126_fu_503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_fu_545_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp5_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_574_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i422_i_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_fu_579_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_138_fu_634_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_53_cast_cast_fu_618_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_140_fu_664_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_1_fu_688_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_141_fu_680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_cast_fu_694_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp6_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev7_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_2_fu_739_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_cast_fu_721_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_cast_fu_744_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp54_not_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp8_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_cast8_fu_776_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_fu_779_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_fu_785_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_3_t_fu_818_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_823_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_842_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_861_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_fu_916_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_67_fu_930_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_944_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_965_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_965_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_973_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_973_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1001_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1001_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1010_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1010_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1019_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1019_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_0_cast_fu_1052_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1064_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1064_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_0_cast_fu_1069_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_252_0_1_cast_fu_1072_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_252_0_2_cast_cast_fu_1081_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_13_0_1_fu_1075_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_252_1_cast_cast_fu_1093_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_13_0_2_cast6_fu_1090_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_252_2_2_cast_cast_cast_fu_1102_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp4_fu_1105_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp4_cast_fu_1110_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_fu_1119_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_cast_fu_1123_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_fu_1126_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal not_i_i_i_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_78_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1170_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_965_ce : STD_LOGIC;
    signal grp_fu_973_ce : STD_LOGIC;
    signal grp_fu_1001_ce : STD_LOGIC;
    signal grp_fu_1010_ce : STD_LOGIC;
    signal grp_fu_1019_ce : STD_LOGIC;
    signal grp_fu_1064_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1001_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1010_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1019_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1064_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_965_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_973_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_bdd_1118 : BOOLEAN;
    signal ap_sig_bdd_1120 : BOOLEAN;
    signal ap_sig_bdd_1117 : BOOLEAN;
    signal ap_sig_bdd_1123 : BOOLEAN;

    component canny_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_mul_2s_8ns_10_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component canny_mul_3s_8ns_11_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_mul_3ns_8ns_11_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_mul_4ns_8ns_12_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component canny_Filter2D_1_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => k_buf_0_val_3_d1);

    k_buf_0_val_4_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    canny_mux_3to1_sel2_8_1_U41 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_0_1_fu_154,
        din2 => right_border_buf_0_val_0_1_2_fu_158,
        din3 => ap_const_lv8_0,
        din4 => col_assign_3_t_fu_818_p2,
        dout => tmp_61_fu_823_p5);

    canny_mux_3to1_sel2_8_1_U42 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_1_1_fu_166,
        din2 => right_border_buf_0_val_1_1_2_fu_170,
        din3 => ap_const_lv8_0,
        din4 => col_assign_3_t_fu_818_p2,
        dout => tmp_62_fu_842_p5);

    canny_mux_3to1_sel2_8_1_U43 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_2_1_3_fu_174,
        din2 => right_border_buf_0_val_2_1_fu_162,
        din3 => ap_const_lv8_0,
        din4 => col_assign_3_t_fu_818_p2,
        dout => tmp_63_fu_861_p5);

    canny_mux_3to1_sel2_8_1_U44 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1548,
        din2 => col_buf_0_val_1_0_reg_1561,
        din3 => col_buf_0_val_2_0_reg_1569,
        din4 => row_assign_s_reg_1442,
        dout => tmp_65_fu_916_p5);

    canny_mux_3to1_sel2_8_1_U45 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1548,
        din2 => col_buf_0_val_1_0_reg_1561,
        din3 => col_buf_0_val_2_0_reg_1569,
        din4 => row_assign_10_1_t_reg_1447,
        dout => tmp_67_fu_930_p5);

    canny_mux_3to1_sel2_8_1_U46 : component canny_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1548,
        din2 => col_buf_0_val_1_0_reg_1561,
        din3 => col_buf_0_val_2_0_reg_1569,
        din4 => row_assign_10_2_t_reg_1452,
        dout => tmp_69_fu_944_p5);

    canny_mul_2s_8ns_10_3_U47 : component canny_mul_2s_8ns_10_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_965_p0,
        din1 => grp_fu_965_p1,
        ce => grp_fu_965_ce,
        dout => grp_fu_965_p2);

    canny_mul_2s_8ns_10_3_U48 : component canny_mul_2s_8ns_10_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_973_p0,
        din1 => grp_fu_973_p1,
        ce => grp_fu_973_ce,
        dout => grp_fu_973_p2);

    canny_mul_3s_8ns_11_3_U49 : component canny_mul_3s_8ns_11_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1001_p0,
        din1 => grp_fu_1001_p1,
        ce => grp_fu_1001_ce,
        dout => grp_fu_1001_p2);

    canny_mul_2s_8ns_10_3_U50 : component canny_mul_2s_8ns_10_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1010_p0,
        din1 => grp_fu_1010_p1,
        ce => grp_fu_1010_ce,
        dout => grp_fu_1010_p2);

    canny_mul_3ns_8ns_11_3_U51 : component canny_mul_3ns_8ns_11_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1019_p0,
        din1 => grp_fu_1019_p1,
        ce => grp_fu_1019_ce,
        dout => grp_fu_1019_p2);

    canny_mul_4ns_8ns_12_3_U52 : component canny_mul_4ns_8ns_12_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1064_p0,
        din1 => grp_fu_1064_p1,
        ce => grp_fu_1064_ce,
        dout => grp_fu_1064_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = exitcond_fu_622_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) then 
                        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
                        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- p_014_0_i_reg_281 assign process. --
    p_014_0_i_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_6)) then 
                p_014_0_i_reg_281 <= i_V_reg_1333;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_phi_fu_274_p4 = ap_const_lv1_0))) then 
                p_014_0_i_reg_281 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_027_0_i_reg_292 assign process. --
    p_027_0_i_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = exitcond_fu_622_p2))) then 
                p_027_0_i_reg_292 <= j_V_fu_628_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                p_027_0_i_reg_292 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- tmp_s_reg_270 assign process. --
    tmp_s_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                tmp_s_reg_270 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_s_phi_fu_274_p4 = ap_const_lv1_0)))) then 
                tmp_s_reg_270 <= tmp_38_fu_303_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = exitcond_fu_622_p2))) then
                ImagLoc_x_reg_1466 <= ImagLoc_x_fu_650_p2;
                icmp7_reg_1477 <= icmp7_fu_674_p2;
                or_cond_i_reg_1495 <= or_cond_i_fu_716_p2;
                p_p2_i_i_reg_1484 <= p_p2_i_i_fu_698_p3;
                tmp_139_reg_1471 <= ImagLoc_x_fu_650_p2(11 downto 11);
                tmp_142_reg_1490 <= p_p2_i_i_fu_698_p3(11 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_phi_fu_274_p4 = ap_const_lv1_0))) then
                OP2_V_0_1_cast_reg_1300 <= OP2_V_0_1_cast_fu_309_p1;
                OP2_V_0_2_cast_reg_1305 <= OP2_V_0_2_cast_fu_312_p1;
                    OP2_V_1_2_cast_reg_1315(3 downto 0) <= OP2_V_1_2_cast_fu_318_p1(3 downto 0);
                OP2_V_1_cast_reg_1310 <= OP2_V_1_cast_fu_315_p1;
                    OP2_V_2_1_cast_reg_1325(2 downto 0) <= OP2_V_2_1_cast_fu_324_p1(2 downto 0);
                OP2_V_2_cast_reg_1320 <= OP2_V_2_cast_fu_321_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                ap_reg_ppstg_brmerge_reg_1513_pp0_it2 <= brmerge_reg_1513;
                ap_reg_ppstg_exitcond_reg_1457_pp0_it2 <= ap_reg_ppstg_exitcond_reg_1457_pp0_it1;
                ap_reg_ppstg_exitcond_reg_1457_pp0_it3 <= ap_reg_ppstg_exitcond_reg_1457_pp0_it2;
                ap_reg_ppstg_exitcond_reg_1457_pp0_it4 <= ap_reg_ppstg_exitcond_reg_1457_pp0_it3;
                ap_reg_ppstg_exitcond_reg_1457_pp0_it5 <= ap_reg_ppstg_exitcond_reg_1457_pp0_it4;
                ap_reg_ppstg_isneg_reg_1691_pp0_it11 <= isneg_reg_1691;
                ap_reg_ppstg_k_buf_0_val_4_addr_reg_1531_pp0_it3 <= k_buf_0_val_4_addr_reg_1531;
                ap_reg_ppstg_k_buf_0_val_5_addr_reg_1537_pp0_it3 <= k_buf_0_val_5_addr_reg_1537;
                ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2 <= or_cond_i_i_reg_1499;
                ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3 <= ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it10 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it9;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it11 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it10;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it2 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it1;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it3 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it2;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it4 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it3;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it5 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it4;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it6 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it5;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it7 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it6;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it8 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it7;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it9 <= ap_reg_ppstg_or_cond_i_reg_1495_pp0_it8;
                ap_reg_ppstg_p_Val2_5_reg_1697_pp0_it11 <= p_Val2_5_reg_1697;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it5 <= src_kernel_win_0_val_0_0_reg_1583;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it6 <= ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it5;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it7 <= ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it6;
                ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it8 <= ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it7;
                ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it5 <= src_kernel_win_0_val_1_0_reg_1589;
                ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it6 <= ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it5;
                src_kernel_win_0_val_0_0_reg_1583 <= src_kernel_win_0_val_0_0_fu_924_p3;
                src_kernel_win_0_val_1_0_reg_1589 <= src_kernel_win_0_val_1_0_fu_938_p3;
                src_kernel_win_0_val_2_0_reg_1595 <= src_kernel_win_0_val_2_0_fu_952_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                ap_reg_ppstg_exitcond_reg_1457_pp0_it1 <= exitcond_reg_1457;
                ap_reg_ppstg_or_cond_i_reg_1495_pp0_it1 <= or_cond_i_reg_1495;
                ap_reg_ppstg_p_p2_i_i_reg_1484_pp0_it1 <= p_p2_i_i_reg_1484;
                exitcond_reg_1457 <= exitcond_fu_622_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = exitcond_reg_1457))) then
                brmerge_reg_1513 <= brmerge_fu_772_p2;
                or_cond_i_i_reg_1499 <= or_cond_i_i_fu_729_p2;
                sel_tmp8_reg_1508 <= sel_tmp8_fu_766_p2;
                sel_tmp_reg_1503 <= sel_tmp_fu_748_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                col_buf_0_val_0_0_reg_1548 <= col_buf_0_val_0_0_fu_835_p3;
                col_buf_0_val_1_0_reg_1561 <= col_buf_0_val_1_0_fu_854_p3;
                col_buf_0_val_2_0_reg_1569 <= col_buf_0_val_2_0_fu_873_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_V_reg_1333 <= i_V_fu_337_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_331_p2))) then
                icmp4_reg_1372 <= icmp4_fu_417_p2;
                icmp_reg_1347 <= icmp_fu_369_p2;
                tmp_114_reg_1342 <= p_014_0_i_reg_281(10 downto 10);
                tmp_117_reg_1367 <= tmp_45_fu_393_p2(11 downto 11);
                tmp_120_reg_1377 <= p_p2_i423_i_fu_441_p3(11 downto 10);
                tmp_121_reg_1382 <= tmp_121_fu_459_p1;
                tmp_122_reg_1387 <= p_assign_6_1_fu_463_p2(10 downto 10);
                tmp_125_reg_1392 <= p_assign_6_2_fu_489_p2(10 downto 10);
                tmp_128_reg_1397 <= tmp_128_fu_515_p1;
                tmp_129_reg_1402 <= tmp_129_fu_519_p1;
                tmp_132_reg_1407 <= tmp_132_fu_523_p1;
                tmp_134_reg_1412 <= tmp_134_fu_533_p3;
                tmp_135_reg_1417 <= tmp_135_fu_541_p1;
                tmp_137_reg_1422 <= tmp_137_fu_551_p3;
                tmp_208_1_reg_1356 <= tmp_208_1_fu_381_p2;
                tmp_43_reg_1352 <= tmp_43_fu_375_p2;
                tmp_44_reg_1360 <= tmp_44_fu_387_p2;
                tmp_reg_1338 <= p_014_0_i_reg_281(10 downto 10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it9)))) then
                isneg_reg_1691 <= p_Val2_4_fu_1126_p2(11 downto 11);
                p_Val2_5_reg_1697 <= p_Val2_5_fu_1140_p1;
                tmp_70_reg_1702 <= p_Val2_4_fu_1126_p2(11 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it1))) then
                k_buf_0_val_3_addr_reg_1525 <= tmp_60_fu_793_p1(10 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1531 <= tmp_60_fu_793_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1537 <= tmp_60_fu_793_p1(10 - 1 downto 0);
                tmp_143_reg_1520 <= tmp_143_fu_789_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                k_buf_0_val_3_load_reg_1543 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1556 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it10)))) then
                overflow_reg_1712 <= overflow_fu_1164_p2;
                tmp_i_i_reg_1707 <= tmp_i_i_fu_1154_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it6)))) then
                p_Val2_0_1_reg_1641 <= grp_fu_965_p2;
                p_Val2_0_2_reg_1646 <= grp_fu_973_p2;
                p_Val2_s_reg_1636 <= p_Val2_s_fu_1055_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it7)))) then
                p_Val2_13_0_2_reg_1656 <= p_Val2_13_0_2_fu_1084_p2;
                p_Val2_1_reg_1661 <= grp_fu_1001_p2;
                p_Val2_2_1_reg_1671 <= grp_fu_1019_p2;
                p_Val2_2_reg_1666 <= grp_fu_1010_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it8)))) then
                p_Val2_13_1_1_reg_1676 <= p_Val2_13_1_1_fu_1096_p2;
                p_Val2_1_2_reg_1681 <= grp_fu_1064_p2;
                tmp3_reg_1686 <= tmp3_fu_1114_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                right_border_buf_0_val_0_1_2_fu_158 <= right_border_buf_0_val_0_1_fu_154;
                right_border_buf_0_val_0_1_fu_154 <= col_buf_0_val_0_0_fu_835_p3;
                right_border_buf_0_val_1_1_2_fu_170 <= right_border_buf_0_val_1_1_fu_166;
                right_border_buf_0_val_1_1_fu_166 <= col_buf_0_val_1_0_fu_854_p3;
                right_border_buf_0_val_2_1_3_fu_174 <= col_buf_0_val_2_0_fu_873_p3;
                right_border_buf_0_val_2_1_fu_162 <= right_border_buf_0_val_2_1_3_fu_174;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_44_reg_1360)) and (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then
                row_assign_10_1_t_reg_1447 <= row_assign_10_1_t_fu_608_p2;
                row_assign_10_2_t_reg_1452 <= row_assign_10_2_t_fu_613_p2;
                row_assign_s_reg_1442 <= row_assign_s_fu_603_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it5))) then
                src_kernel_win_0_val_0_1_2_fu_134 <= src_kernel_win_0_val_0_1_fu_130;
                src_kernel_win_0_val_0_1_fu_130 <= ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it5;
                src_kernel_win_0_val_1_1_2_fu_142 <= src_kernel_win_0_val_1_1_fu_138;
                src_kernel_win_0_val_1_1_fu_138 <= ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it5;
                src_kernel_win_0_val_2_1_2_fu_150 <= src_kernel_win_0_val_2_1_lo_2_reg_1611;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it5)))) then
                src_kernel_win_0_val_2_1_2_s_reg_1616 <= src_kernel_win_0_val_2_1_2_fu_150;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it4))) then
                src_kernel_win_0_val_2_1_fu_146 <= src_kernel_win_0_val_2_0_reg_1595;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it4))) then
                src_kernel_win_0_val_2_1_lo_2_reg_1611 <= src_kernel_win_0_val_2_1_fu_146;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_44_reg_1360)))) then
                tmp_106_reg_1427 <= tmp_106_fu_586_p3;
                tmp_107_reg_1432 <= tmp_107_fu_593_p3;
                tmp_108_reg_1437 <= tmp_108_fu_598_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and (ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                tmp_149_reg_1577 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    OP2_V_1_2_cast_reg_1315(11 downto 4) <= "00000000";
    OP2_V_2_1_cast_reg_1325(10 downto 3) <= "00000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_s_phi_fu_274_p4, exitcond1_fu_331_p2, ap_reg_ppiten_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it11, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_s_phi_fu_274_p4 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_331_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
            when ap_ST_pp0_stg0_fsm_5 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                end if;
            when ap_ST_st19_fsm_6 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
        ImagLoc_x_cast_fu_721_p1 <= std_logic_vector(resize(signed(ImagLoc_x_reg_1466),13));

    ImagLoc_x_fu_650_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(tmp_53_cast_cast_fu_618_p1));
    OP1_V_0_cast_fu_1052_p1 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_2_s_reg_1616),9));
        OP2_V_0_1_cast_fu_309_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_V_1_read),10));

        OP2_V_0_2_cast_fu_312_p1 <= std_logic_vector(resize(signed(p_kernel_val_0_V_2_read),10));

    OP2_V_1_2_cast_fu_318_p1 <= std_logic_vector(resize(unsigned(p_kernel_val_1_V_2_read),12));
        OP2_V_1_cast_fu_315_p1 <= std_logic_vector(resize(signed(p_kernel_val_1_V_0_read),11));

    OP2_V_2_1_cast_fu_324_p1 <= std_logic_vector(resize(unsigned(p_kernel_val_2_V_1_read),11));
        OP2_V_2_cast_fu_321_p1 <= std_logic_vector(resize(signed(p_kernel_val_2_V_0_read),10));


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2, exitcond1_fu_331_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_331_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond1_fu_331_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_331_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1117 assign process. --
    ap_sig_bdd_1117_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)
    begin
                ap_sig_bdd_1117 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)));
    end process;


    -- ap_sig_bdd_1118 assign process. --
    ap_sig_bdd_1118_assign_proc : process(icmp_reg_1347, tmp_208_1_reg_1356)
    begin
                ap_sig_bdd_1118 <= ((ap_const_lv1_0 = icmp_reg_1347) and not((ap_const_lv1_0 = tmp_208_1_reg_1356)));
    end process;


    -- ap_sig_bdd_1120 assign process. --
    ap_sig_bdd_1120_assign_proc : process(tmp_reg_1338, icmp_reg_1347)
    begin
                ap_sig_bdd_1120 <= (not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338));
    end process;


    -- ap_sig_bdd_1123 assign process. --
    ap_sig_bdd_1123_assign_proc : process(icmp_reg_1347, tmp_43_reg_1352)
    begin
                ap_sig_bdd_1123 <= ((ap_const_lv1_0 = icmp_reg_1347) and not((ap_const_lv1_0 = tmp_43_reg_1352)));
    end process;


    -- ap_sig_bdd_141 assign process. --
    ap_sig_bdd_141_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_141 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_157 assign process. --
    ap_sig_bdd_157_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_157 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_171 assign process. --
    ap_sig_bdd_171_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_171 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_196 assign process. --
    ap_sig_bdd_196_assign_proc : process(p_src_data_stream_V_empty_n, tmp_reg_1338, icmp_reg_1347, ap_reg_ppstg_exitcond_reg_1457_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)
    begin
                ap_sig_bdd_196 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and (ap_const_lv1_0 = icmp_reg_1347)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338)));
    end process;


    -- ap_sig_bdd_222 assign process. --
    ap_sig_bdd_222_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond_i_reg_1495_pp0_it11)
    begin
                ap_sig_bdd_222 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it11)));
    end process;


    -- ap_sig_bdd_25 assign process. --
    ap_sig_bdd_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_460 assign process. --
    ap_sig_bdd_460_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_460 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_68 assign process. --
    ap_sig_bdd_68_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_68 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_93 assign process. --
    ap_sig_bdd_93_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_93 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_5 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_5_assign_proc : process(ap_sig_bdd_171)
    begin
        if (ap_sig_bdd_171) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_6 assign process. --
    ap_sig_cseq_ST_st19_fsm_6_assign_proc : process(ap_sig_bdd_460)
    begin
        if (ap_sig_bdd_460) then 
            ap_sig_cseq_ST_st19_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_25)
    begin
        if (ap_sig_bdd_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_68)
    begin
        if (ap_sig_bdd_68) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_93)
    begin
        if (ap_sig_bdd_93) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_141)
    begin
        if (ap_sig_bdd_141) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_157)
    begin
        if (ap_sig_bdd_157) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_772_p2 <= (tmp_114_reg_1342 or icmp7_reg_1477);
    col_assign_3_t_fu_818_p2 <= (tmp_143_reg_1520 xor ap_const_lv2_3);
        col_assign_cast_fu_785_p1 <= std_logic_vector(resize(signed(x_fu_779_p3),32));

    col_buf_0_val_0_0_fu_835_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_ppstg_brmerge_reg_1513_pp0_it2(0) = '1') else 
        tmp_61_fu_823_p5;
    col_buf_0_val_1_0_fu_854_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_ppstg_brmerge_reg_1513_pp0_it2(0) = '1') else 
        tmp_62_fu_842_p5;
    col_buf_0_val_2_0_fu_873_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_ppstg_brmerge_reg_1513_pp0_it2(0) = '1') else 
        tmp_63_fu_861_p5;
    exitcond1_fu_331_p2 <= "1" when (p_014_0_i_reg_281 = ap_const_lv11_402) else "0";
    exitcond_fu_622_p2 <= "1" when (p_027_0_i_reg_292 = ap_const_lv11_402) else "0";

    -- grp_fu_1001_ce assign process. --
    grp_fu_1001_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1001_ce <= ap_const_logic_1;
        else 
            grp_fu_1001_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1001_p0 <= OP2_V_1_cast_reg_1310(3 - 1 downto 0);
    grp_fu_1001_p1 <= grp_fu_1001_p10(8 - 1 downto 0);
    grp_fu_1001_p10 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_1_1_2_fu_142),11));

    -- grp_fu_1010_ce assign process. --
    grp_fu_1010_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1010_ce <= ap_const_logic_1;
        else 
            grp_fu_1010_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1010_p0 <= OP2_V_2_cast_reg_1320(2 - 1 downto 0);
    grp_fu_1010_p1 <= grp_fu_1010_p10(8 - 1 downto 0);
    grp_fu_1010_p10 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_2_fu_134),10));

    -- grp_fu_1019_ce assign process. --
    grp_fu_1019_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1019_ce <= ap_const_logic_1;
        else 
            grp_fu_1019_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1019_p0 <= OP2_V_2_1_cast_reg_1325(3 - 1 downto 0);
    grp_fu_1019_p1 <= grp_fu_1019_p10(8 - 1 downto 0);
    grp_fu_1019_p10 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_fu_130),11));

    -- grp_fu_1064_ce assign process. --
    grp_fu_1064_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_1064_ce <= ap_const_logic_1;
        else 
            grp_fu_1064_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1064_p0 <= OP2_V_1_2_cast_reg_1315(4 - 1 downto 0);
    grp_fu_1064_p1 <= grp_fu_1064_p10(8 - 1 downto 0);
    grp_fu_1064_p10 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1589_pp0_it6),12));

    -- grp_fu_965_ce assign process. --
    grp_fu_965_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_965_ce <= ap_const_logic_1;
        else 
            grp_fu_965_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_965_p0 <= OP2_V_0_1_cast_reg_1300(2 - 1 downto 0);
    grp_fu_965_p1 <= grp_fu_965_p10(8 - 1 downto 0);
    grp_fu_965_p10 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_fu_146),10));

    -- grp_fu_973_ce assign process. --
    grp_fu_973_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            grp_fu_973_ce <= ap_const_logic_1;
        else 
            grp_fu_973_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_973_p0 <= OP2_V_0_2_cast_reg_1305(2 - 1 downto 0);
    grp_fu_973_p1 <= grp_fu_973_p10(8 - 1 downto 0);
    grp_fu_973_p10 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_0_reg_1595),10));
    i_V_fu_337_p2 <= std_logic_vector(unsigned(p_014_0_i_reg_281) + unsigned(ap_const_lv11_1));
    icmp4_fu_417_p2 <= "0" when (tmp_118_fu_407_p4 = ap_const_lv2_1) else "1";
    icmp54_not_fu_756_p2 <= (icmp7_reg_1477 xor ap_const_lv1_1);
    icmp5_fu_569_p2 <= "0" when (tmp_120_reg_1377 = ap_const_lv2_1) else "1";
    icmp6_fu_644_p2 <= "0" when (tmp_138_fu_634_p4 = ap_const_lv10_0) else "1";
    icmp7_fu_674_p2 <= "0" when (tmp_140_fu_664_p4 = ap_const_lv2_1) else "1";
    icmp8_fu_734_p2 <= "0" when (tmp_142_reg_1490 = ap_const_lv2_1) else "1";
    icmp_fu_369_p2 <= "0" when (tmp_115_fu_359_p4 = ap_const_lv10_0) else "1";
    j_V_fu_628_p2 <= std_logic_vector(unsigned(p_027_0_i_reg_292) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_60_fu_793_p1(10 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1525;

    -- k_buf_0_val_3_ce0 assign process. --
    k_buf_0_val_3_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_3_ce1 assign process. --
    k_buf_0_val_3_ce1_assign_proc : process(tmp_reg_1338, icmp_reg_1347, tmp_43_reg_1352, ap_reg_ppstg_exitcond_reg_1457_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and (ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_43_reg_1352))))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_3_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_3_we1 assign process. --
    k_buf_0_val_3_we1_assign_proc : process(tmp_reg_1338, icmp_reg_1347, tmp_43_reg_1352, ap_reg_ppstg_exitcond_reg_1457_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and (ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_43_reg_1352))))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_60_fu_793_p1(10 - 1 downto 0);
    k_buf_0_val_4_address1 <= ap_reg_ppstg_k_buf_0_val_4_addr_reg_1531_pp0_it3;

    -- k_buf_0_val_4_ce0 assign process. --
    k_buf_0_val_4_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_ce1 assign process. --
    k_buf_0_val_4_ce1_assign_proc : process(tmp_reg_1338, icmp_reg_1347, tmp_208_1_reg_1356, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)
    begin
        if ((((ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)) and not((ap_const_lv1_0 = tmp_208_1_reg_1356))) or (not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3))))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_d1 assign process. --
    k_buf_0_val_4_d1_assign_proc : process(k_buf_0_val_3_load_reg_1543, tmp_149_reg_1577, ap_sig_bdd_1118, ap_sig_bdd_1120, ap_sig_bdd_1117)
    begin
        if (ap_sig_bdd_1117) then
            if (ap_sig_bdd_1120) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1543;
            elsif (ap_sig_bdd_1118) then 
                k_buf_0_val_4_d1 <= tmp_149_reg_1577;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_4_we1 assign process. --
    k_buf_0_val_4_we1_assign_proc : process(tmp_reg_1338, icmp_reg_1347, tmp_208_1_reg_1356, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)
    begin
        if ((((ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)) and not((ap_const_lv1_0 = tmp_208_1_reg_1356))) or (not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3))))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_60_fu_793_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= ap_reg_ppstg_k_buf_0_val_5_addr_reg_1537_pp0_it3;

    -- k_buf_0_val_5_ce0 assign process. --
    k_buf_0_val_5_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_ce1 assign process. --
    k_buf_0_val_5_ce1_assign_proc : process(tmp_reg_1338, icmp_reg_1347, tmp_43_reg_1352, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)
    begin
        if (((not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3))) or ((ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_43_reg_1352)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3))))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_d1 assign process. --
    k_buf_0_val_5_d1_assign_proc : process(k_buf_0_val_4_load_reg_1556, tmp_149_reg_1577, ap_sig_bdd_1120, ap_sig_bdd_1117, ap_sig_bdd_1123)
    begin
        if (ap_sig_bdd_1117) then
            if (ap_sig_bdd_1120) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1556;
            elsif (ap_sig_bdd_1123) then 
                k_buf_0_val_5_d1 <= tmp_149_reg_1577;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_5_we1 assign process. --
    k_buf_0_val_5_we1_assign_proc : process(tmp_reg_1338, icmp_reg_1347, tmp_43_reg_1352, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3)
    begin
        if (((not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3))) or ((ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_43_reg_1352)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it3))))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_fu_1159_p2 <= "0" when (tmp_70_reg_1702 = ap_const_lv4_0) else "1";
    or_cond_i422_i_fu_564_p2 <= (icmp4_reg_1372 and rev_fu_559_p2);
    or_cond_i_fu_716_p2 <= (icmp_reg_1347 and icmp6_fu_644_p2);
    or_cond_i_i_fu_729_p2 <= (icmp7_reg_1477 and rev7_fu_724_p2);
    overflow_fu_1164_p2 <= (not_i_i_i_fu_1159_p2 and tmp_i_i_fu_1154_p2);
    p_Val2_13_0_1_fu_1075_p2 <= std_logic_vector(signed(tmp_252_0_cast_fu_1069_p1) + signed(tmp_252_0_1_cast_fu_1072_p1));
        p_Val2_13_0_2_cast6_fu_1090_p1 <= std_logic_vector(resize(signed(p_Val2_13_0_2_reg_1656),12));

    p_Val2_13_0_2_fu_1084_p2 <= std_logic_vector(signed(tmp_252_0_2_cast_cast_fu_1081_p1) + signed(p_Val2_13_0_1_fu_1075_p2));
    p_Val2_13_1_1_fu_1096_p2 <= std_logic_vector(signed(tmp_252_1_cast_cast_fu_1093_p1) + signed(p_Val2_13_0_2_cast6_fu_1090_p1));
    p_Val2_4_fu_1126_p2 <= std_logic_vector(unsigned(tmp2_fu_1119_p2) + unsigned(tmp3_cast_fu_1123_p1));
    p_Val2_5_fu_1140_p1 <= p_Val2_4_fu_1126_p2(8 - 1 downto 0);
    p_Val2_s_fu_1055_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1052_p1));
        p_assign_1_cast_fu_694_p1 <= std_logic_vector(resize(signed(p_assign_1_fu_688_p2),12));

    p_assign_1_fu_688_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(p_027_0_i_reg_292));
    p_assign_2_cast_fu_744_p1 <= std_logic_vector(resize(unsigned(p_assign_2_fu_739_p2),13));
    p_assign_2_fu_739_p2 <= std_logic_vector(unsigned(ap_const_lv12_7FE) - unsigned(p_p2_i_i_reg_1484));
    p_assign_6_1_fu_463_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(p_014_0_i_reg_281));
    p_assign_6_2_fu_489_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(p_014_0_i_reg_281));
        p_assign_7_cast_fu_437_p1 <= std_logic_vector(resize(signed(p_assign_7_fu_431_p2),12));

    p_assign_7_fu_431_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(p_014_0_i_reg_281));
    p_dst_data_stream_V_din <= 
        p_mux_i_i_cast_fu_1170_p3 when (tmp_i_i_78_fu_1177_p2(0) = '1') else 
        ap_reg_ppstg_p_Val2_5_reg_1697_pp0_it11;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_or_cond_i_reg_1495_pp0_it11, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1495_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1170_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_reg_1707(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i423_i_fu_441_p3 <= 
        p_assign_7_cast_fu_437_p1 when (tmp_119_fu_423_p3(0) = '1') else 
        tmp_45_fu_393_p2;
        p_p2_i_i_cast_cast8_fu_776_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_p_p2_i_i_reg_1484_pp0_it1),13));

    p_p2_i_i_fu_698_p3 <= 
        p_assign_1_cast_fu_694_p1 when (tmp_141_fu_680_p3(0) = '1') else 
        ImagLoc_x_fu_650_p2;

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(tmp_reg_1338, icmp_reg_1347, ap_reg_ppstg_exitcond_reg_1457_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2, ap_sig_bdd_196, ap_reg_ppiten_pp0_it3, ap_sig_bdd_222, ap_reg_ppiten_pp0_it12)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and (ap_const_lv1_0 = icmp_reg_1347) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1457_pp0_it2) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1499_pp0_it2)) and not((ap_const_lv1_0 = icmp_reg_1347)) and (ap_const_lv1_0 = tmp_reg_1338) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_196 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_222 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev7_fu_724_p2 <= (tmp_139_reg_1471 xor ap_const_lv1_1);
    rev_fu_559_p2 <= (tmp_117_reg_1367 xor ap_const_lv1_1);
    row_assign_10_1_t_fu_608_p2 <= (tmp_107_reg_1432 xor ap_const_lv2_3);
    row_assign_10_2_t_fu_613_p2 <= (tmp_108_reg_1437 xor ap_const_lv2_3);
    row_assign_s_fu_603_p2 <= (tmp_106_reg_1427 xor ap_const_lv2_3);
    sel_tmp7_fu_761_p2 <= (tmp_139_reg_1471 or icmp54_not_fu_756_p2);
    sel_tmp8_fu_766_p2 <= (icmp8_fu_734_p2 and sel_tmp7_fu_761_p2);
    sel_tmp_fu_748_p3 <= 
        ImagLoc_x_cast_fu_721_p1 when (or_cond_i_i_fu_729_p2(0) = '1') else 
        p_assign_2_cast_fu_744_p1;
    src_kernel_win_0_val_0_0_fu_924_p3 <= 
        tmp_65_fu_916_p5 when (tmp_44_reg_1360(0) = '1') else 
        col_buf_0_val_0_0_reg_1548;
    src_kernel_win_0_val_1_0_fu_938_p3 <= 
        tmp_67_fu_930_p5 when (tmp_44_reg_1360(0) = '1') else 
        col_buf_0_val_1_0_reg_1561;
    src_kernel_win_0_val_2_0_fu_952_p3 <= 
        tmp_69_fu_944_p5 when (tmp_44_reg_1360(0) = '1') else 
        col_buf_0_val_2_0_reg_1569;
    tmp2_fu_1119_p2 <= std_logic_vector(unsigned(p_Val2_1_2_reg_1681) + unsigned(p_Val2_13_1_1_reg_1676));
        tmp3_cast_fu_1123_p1 <= std_logic_vector(resize(signed(tmp3_reg_1686),12));

    tmp3_fu_1114_p2 <= std_logic_vector(unsigned(p_Val2_2_1_reg_1671) + unsigned(tmp4_cast_fu_1110_p1));
        tmp4_cast_fu_1110_p1 <= std_logic_vector(resize(signed(tmp4_fu_1105_p2),11));

    tmp4_fu_1105_p2 <= std_logic_vector(unsigned(tmp_252_2_2_cast_cast_cast_fu_1102_p1) + unsigned(p_Val2_2_reg_1666));
    tmp_106_fu_586_p3 <= 
        tmp_128_reg_1397 when (or_cond_i422_i_fu_564_p2(0) = '1') else 
        tmp_131_fu_579_p3;
    tmp_107_fu_593_p3 <= 
        tmp_134_reg_1412 when (tmp_122_reg_1387(0) = '1') else 
        tmp_132_reg_1407;
    tmp_108_fu_598_p3 <= 
        tmp_137_reg_1422 when (tmp_125_reg_1392(0) = '1') else 
        tmp_135_reg_1417;
    tmp_115_fu_359_p4 <= p_014_0_i_reg_281(10 downto 1);
    tmp_118_fu_407_p4 <= tmp_45_fu_393_p2(11 downto 10);
    tmp_119_fu_423_p3 <= tmp_45_fu_393_p2(11 downto 11);
    tmp_121_fu_459_p1 <= p_p2_i423_i_fu_441_p3(2 - 1 downto 0);
    tmp_123_fu_477_p3 <= p_assign_6_1_fu_463_p2(10 downto 10);
    tmp_124_fu_485_p1 <= p_014_0_i_reg_281(2 - 1 downto 0);
    tmp_126_fu_503_p3 <= p_assign_6_2_fu_489_p2(10 downto 10);
    tmp_127_fu_511_p1 <= p_014_0_i_reg_281(2 - 1 downto 0);
    tmp_128_fu_515_p1 <= tmp_45_fu_393_p2(2 - 1 downto 0);
    tmp_129_fu_519_p1 <= p_p2_i423_i_fu_441_p3(2 - 1 downto 0);
    tmp_130_fu_574_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_121_reg_1382));
    tmp_131_fu_579_p3 <= 
        tmp_129_reg_1402 when (icmp5_fu_569_p2(0) = '1') else 
        tmp_130_fu_574_p2;
    tmp_132_fu_523_p1 <= p_assign_6_1_fu_463_p2(2 - 1 downto 0);
    tmp_133_fu_527_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_124_fu_485_p1));
    tmp_134_fu_533_p3 <= 
        tmp_133_fu_527_p2 when (tmp_123_fu_477_p3(0) = '1') else 
        tmp_132_fu_523_p1;
    tmp_135_fu_541_p1 <= p_assign_6_2_fu_489_p2(2 - 1 downto 0);
    tmp_136_fu_545_p2 <= (tmp_127_fu_511_p1 xor ap_const_lv2_3);
    tmp_137_fu_551_p3 <= 
        tmp_136_fu_545_p2 when (tmp_126_fu_503_p3(0) = '1') else 
        tmp_135_fu_541_p1;
    tmp_138_fu_634_p4 <= p_027_0_i_reg_292(10 downto 1);
    tmp_140_fu_664_p4 <= ImagLoc_x_fu_650_p2(11 downto 10);
    tmp_141_fu_680_p3 <= ImagLoc_x_fu_650_p2(11 downto 11);
    tmp_143_fu_789_p1 <= x_fu_779_p3(2 - 1 downto 0);
    tmp_208_1_fu_381_p2 <= "1" when (p_014_0_i_reg_281 = ap_const_lv11_0) else "0";
        tmp_252_0_1_cast_fu_1072_p1 <= std_logic_vector(resize(signed(p_Val2_0_1_reg_1641),11));

        tmp_252_0_2_cast_cast_fu_1081_p1 <= std_logic_vector(resize(signed(p_Val2_0_2_reg_1646),11));

        tmp_252_0_cast_fu_1069_p1 <= std_logic_vector(resize(signed(p_Val2_s_reg_1636),11));

        tmp_252_1_cast_cast_fu_1093_p1 <= std_logic_vector(resize(signed(p_Val2_1_reg_1661),12));

    tmp_252_2_2_cast_cast_cast_fu_1102_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_0_reg_1583_pp0_it8),10));
    tmp_38_fu_303_p2 <= (tmp_s_reg_270 xor ap_const_lv1_1);
    tmp_43_fu_375_p2 <= "1" when (p_014_0_i_reg_281 = ap_const_lv11_1) else "0";
    tmp_44_fu_387_p2 <= "1" when (unsigned(p_014_0_i_reg_281) > unsigned(ap_const_lv11_400)) else "0";
    tmp_45_fu_393_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(tmp_50_cast_cast_fu_327_p1));
    tmp_50_cast_cast_fu_327_p1 <= std_logic_vector(resize(unsigned(p_014_0_i_reg_281),12));
    tmp_53_cast_cast_fu_618_p1 <= std_logic_vector(resize(unsigned(p_027_0_i_reg_292),12));
    tmp_60_fu_793_p1 <= std_logic_vector(resize(unsigned(col_assign_cast_fu_785_p1),64));
    tmp_i_i_78_fu_1177_p2 <= (ap_reg_ppstg_isneg_reg_1691_pp0_it11 or overflow_reg_1712);
    tmp_i_i_fu_1154_p2 <= (isneg_reg_1691 xor ap_const_lv1_1);
    tmp_s_phi_fu_274_p4 <= tmp_s_reg_270;
    x_fu_779_p3 <= 
        p_p2_i_i_cast_cast8_fu_776_p1 when (sel_tmp8_reg_1508(0) = '1') else 
        sel_tmp_reg_1503;
end behav;
