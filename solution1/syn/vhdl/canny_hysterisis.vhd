-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_hysterisis is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    supressed_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    supressed_data_stream_V_empty_n : IN STD_LOGIC;
    supressed_data_stream_V_read : OUT STD_LOGIC;
    hysterisis_Image_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    hysterisis_Image_data_stream_V_full_n : IN STD_LOGIC;
    hysterisis_Image_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of canny_hysterisis is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv8_DC : STD_LOGIC_VECTOR (7 downto 0) := "11011100";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal p_2_reg_153 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_46 : BOOLEAN;
    signal i_V_fu_170_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_491 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_496 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_501 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_506 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_511 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_66 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal or_cond6_reg_583 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond6_reg_583_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_84 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal j_V_fu_210_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal Buffer_val_1_addr_reg_520 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_Buffer_val_1_addr_reg_520_pp0_it1 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_0_addr_reg_526 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp2_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_532 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_reg_537 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp10_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp10_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal Buffer_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp2_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal Buffer_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp1_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_reg_558 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_reg_573 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_reg_578 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond6_reg_583_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_reg_597 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_reg_602 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_607 : STD_LOGIC_VECTOR (0 downto 0);
    signal Buffer_val_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_0_ce0 : STD_LOGIC;
    signal Buffer_val_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_0_ce1 : STD_LOGIC;
    signal Buffer_val_0_we1 : STD_LOGIC;
    signal Buffer_val_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Buffer_val_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_1_ce0 : STD_LOGIC;
    signal Buffer_val_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buffer_val_1_ce1 : STD_LOGIC;
    signal Buffer_val_1_we1 : STD_LOGIC;
    signal Buffer_val_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_reg_142 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_bdd_172 : BOOLEAN;
    signal tmp_20_fu_216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal Win_val_0_1_fu_68 : STD_LOGIC_VECTOR (7 downto 0);
    signal Win_val_0_1_2_fu_72 : STD_LOGIC_VECTOR (7 downto 0);
    signal Win_val_1_1_fu_76 : STD_LOGIC_VECTOR (7 downto 0);
    signal Win_val_1_1_2_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal Win_val_2_1_fu_84 : STD_LOGIC_VECTOR (7 downto 0);
    signal Win_val_2_1_2_fu_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_176_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_222_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal notrhs_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond8_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component canny_Filter2D_1_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    Buffer_val_0_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Buffer_val_0_address0,
        ce0 => Buffer_val_0_ce0,
        q0 => Buffer_val_0_q0,
        address1 => Buffer_val_0_address1,
        ce1 => Buffer_val_0_ce1,
        we1 => Buffer_val_0_we1,
        d1 => Buffer_val_0_d1);

    Buffer_val_1_U : component canny_Filter2D_1_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Buffer_val_1_address0,
        ce0 => Buffer_val_1_ce0,
        q0 => Buffer_val_1_q0,
        address1 => Buffer_val_1_address1,
        ce1 => Buffer_val_1_ce1,
        we1 => Buffer_val_1_we1,
        d1 => Buffer_val_1_d1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_164_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_lv1_0 = exitcond_fu_204_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_164_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and (ap_const_lv1_0 = exitcond_fu_204_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_164_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_lv1_0 = exitcond_fu_204_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_164_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_2_reg_153 assign process. --
    p_2_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and (ap_const_lv1_0 = exitcond_fu_204_p2))) then 
                p_2_reg_153 <= j_V_fu_210_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_164_p2 = ap_const_lv1_0))) then 
                p_2_reg_153 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_s_reg_142 assign process. --
    p_s_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_lv1_0 = exitcond_fu_204_p2)))) then 
                p_s_reg_142 <= i_V_reg_491;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_172))) then 
                p_s_reg_142 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and (ap_const_lv1_0 = exitcond_fu_204_p2))) then
                Buffer_val_0_addr_reg_526 <= tmp_20_fu_216_p1(10 - 1 downto 0);
                Buffer_val_1_addr_reg_520 <= tmp_20_fu_216_p1(10 - 1 downto 0);
                icmp2_reg_532 <= icmp2_fu_232_p2;
                tmp10_reg_542 <= tmp10_fu_255_p2;
                tmp9_reg_537 <= tmp9_fu_250_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and (ap_const_lv1_0 = exitcond_reg_511))) then
                Win_val_0_1_2_fu_72 <= Win_val_0_1_fu_68;
                Win_val_0_1_fu_68 <= supressed_data_stream_V_dout;
                Win_val_1_1_2_fu_80 <= Win_val_1_1_fu_76;
                Win_val_1_1_fu_76 <= Buffer_val_0_q0;
                Win_val_2_1_2_fu_88 <= Win_val_2_1_fu_84;
                Win_val_2_1_fu_84 <= Buffer_val_1_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                ap_reg_ppstg_Buffer_val_1_addr_reg_520_pp0_it1 <= Buffer_val_1_addr_reg_520;
                exitcond_reg_511 <= exitcond_fu_204_p2;
                or_cond6_reg_583 <= or_cond6_fu_349_p2;
                tmp1_reg_558 <= tmp1_fu_284_p2;
                tmp3_reg_568 <= tmp3_fu_331_p2;
                tmp4_reg_573 <= tmp4_fu_337_p2;
                tmp8_reg_578 <= tmp8_fu_343_p2;
                tmp_27_reg_563 <= tmp_27_fu_313_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then
                ap_reg_ppstg_or_cond6_reg_583_pp0_it2 <= or_cond6_reg_583;
                ap_reg_ppstg_or_cond6_reg_583_pp0_it3 <= ap_reg_ppstg_or_cond6_reg_583_pp0_it2;
                or_cond8_reg_587 <= or_cond8_fu_392_p2;
                tmp2_reg_592 <= tmp2_fu_406_p2;
                tmp6_reg_597 <= tmp6_fu_410_p2;
                tmp7_reg_602 <= tmp7_fu_415_p2;
                tmp_31_reg_607 <= tmp_31_fu_434_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_V_reg_491 <= i_V_fu_170_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond2_fu_164_p2 = ap_const_lv1_0))) then
                icmp_reg_496 <= icmp_fu_186_p2;
                notlhs_reg_501 <= notlhs_fu_192_p2;
                tmp_s_reg_506 <= tmp_s_fu_198_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                temp1_reg_552 <= Buffer_val_0_q0;
                temp2_reg_547 <= Buffer_val_1_q0;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, supressed_data_stream_V_empty_n, exitcond2_fu_164_p2, exitcond_fu_204_p2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4, ap_sig_bdd_172)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_172)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond2_fu_164_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_lv1_0 = exitcond_fu_204_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not((ap_const_lv1_0 = exitcond_fu_204_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    Buffer_val_0_address0 <= tmp_20_fu_216_p1(10 - 1 downto 0);
    Buffer_val_0_address1 <= Buffer_val_0_addr_reg_526;

    -- Buffer_val_0_ce0 assign process. --
    Buffer_val_0_ce0_assign_proc : process(supressed_data_stream_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then 
            Buffer_val_0_ce0 <= ap_const_logic_1;
        else 
            Buffer_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Buffer_val_0_ce1 assign process. --
    Buffer_val_0_ce1_assign_proc : process(supressed_data_stream_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then 
            Buffer_val_0_ce1 <= ap_const_logic_1;
        else 
            Buffer_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Buffer_val_0_d1 <= supressed_data_stream_V_dout;

    -- Buffer_val_0_we1 assign process. --
    Buffer_val_0_we1_assign_proc : process(supressed_data_stream_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))))) then 
            Buffer_val_0_we1 <= ap_const_logic_1;
        else 
            Buffer_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    Buffer_val_1_address0 <= tmp_20_fu_216_p1(10 - 1 downto 0);
    Buffer_val_1_address1 <= ap_reg_ppstg_Buffer_val_1_addr_reg_520_pp0_it1;

    -- Buffer_val_1_ce0 assign process. --
    Buffer_val_1_ce0_assign_proc : process(supressed_data_stream_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then 
            Buffer_val_1_ce0 <= ap_const_logic_1;
        else 
            Buffer_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Buffer_val_1_ce1 assign process. --
    Buffer_val_1_ce1_assign_proc : process(supressed_data_stream_V_empty_n, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then 
            Buffer_val_1_ce1 <= ap_const_logic_1;
        else 
            Buffer_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Buffer_val_1_d1 <= temp1_reg_552;

    -- Buffer_val_1_we1 assign process. --
    Buffer_val_1_we1_assign_proc : process(supressed_data_stream_V_empty_n, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))))) then 
            Buffer_val_1_we1 <= ap_const_logic_1;
        else 
            Buffer_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond2_fu_164_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_164_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond2_fu_164_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond2_fu_164_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_172 assign process. --
    ap_sig_bdd_172_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_172 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_46 assign process. --
    ap_sig_bdd_46_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_46 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_66 assign process. --
    ap_sig_bdd_66_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_66 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_84 assign process. --
    ap_sig_bdd_84_assign_proc : process(hysterisis_Image_data_stream_V_full_n, ap_reg_ppstg_or_cond6_reg_583_pp0_it3)
    begin
                ap_sig_bdd_84 <= ((hysterisis_Image_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond6_reg_583_pp0_it3)));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_66)
    begin
        if (ap_sig_bdd_66) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_46)
    begin
        if (ap_sig_bdd_46) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_164_p2 <= "1" when (p_s_reg_142 = ap_const_lv11_400) else "0";
    exitcond_fu_204_p2 <= "1" when (p_2_reg_153 = ap_const_lv11_400) else "0";
    hysterisis_Image_data_stream_V_din <= 
        ap_const_lv8_FF when (tmp_31_reg_607(0) = '1') else 
        ap_const_lv8_0;

    -- hysterisis_Image_data_stream_V_write assign process. --
    hysterisis_Image_data_stream_V_write_assign_proc : process(supressed_data_stream_V_empty_n, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_or_cond6_reg_583_pp0_it3, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond6_reg_583_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then 
            hysterisis_Image_data_stream_V_write <= ap_const_logic_1;
        else 
            hysterisis_Image_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_170_p2 <= std_logic_vector(unsigned(p_s_reg_142) + unsigned(ap_const_lv11_1));
    icmp2_fu_232_p2 <= "1" when (tmp_37_fu_222_p4 = ap_const_lv10_0) else "0";
    icmp_fu_186_p2 <= "1" when (tmp_fu_176_p4 = ap_const_lv10_0) else "0";
    j_V_fu_210_p2 <= std_logic_vector(unsigned(p_2_reg_153) + unsigned(ap_const_lv11_1));
    not_or_cond8_fu_429_p2 <= (or_cond8_reg_587 xor ap_const_lv1_1);
    notlhs_fu_192_p2 <= "0" when (p_s_reg_142 = ap_const_lv11_0) else "1";
    notrhs_fu_238_p2 <= "0" when (p_2_reg_153 = ap_const_lv11_0) else "1";
    or_cond6_fu_349_p2 <= (tmp10_reg_542 and tmp9_reg_537);
    or_cond8_fu_392_p2 <= (tmp1_reg_558 or icmp_reg_496);
    or_cond_fu_424_p2 <= (tmp5_fu_420_p2 or tmp2_reg_592);

    -- supressed_data_stream_V_read assign process. --
    supressed_data_stream_V_read_assign_proc : process(supressed_data_stream_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_84, ap_reg_ppiten_pp0_it4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((supressed_data_stream_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_84 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then 
            supressed_data_stream_V_read <= ap_const_logic_1;
        else 
            supressed_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_255_p2 <= (tmp_s_reg_506 and tmp_32_fu_244_p2);
    tmp1_fu_284_p2 <= (icmp2_reg_532 or tmp_21_fu_278_p2);
    tmp2_fu_406_p2 <= (tmp4_reg_573 or tmp3_reg_568);
    tmp3_fu_331_p2 <= (tmp_22_fu_289_p2 or tmp_23_fu_295_p2);
    tmp4_fu_337_p2 <= (tmp_24_fu_301_p2 or tmp_25_fu_307_p2);
    tmp5_fu_420_p2 <= (tmp7_reg_602 or tmp6_reg_597);
    tmp6_fu_410_p2 <= (tmp_26_fu_396_p2 or tmp_27_reg_563);
    tmp7_fu_415_p2 <= (tmp8_reg_578 or tmp_28_fu_401_p2);
    tmp8_fu_343_p2 <= (tmp_29_fu_319_p2 or tmp_30_fu_325_p2);
    tmp9_fu_250_p2 <= (notrhs_fu_238_p2 and notlhs_reg_501);
    tmp_20_fu_216_p1 <= std_logic_vector(resize(unsigned(p_2_reg_153),64));
    tmp_21_fu_278_p2 <= "1" when (unsigned(Win_val_1_1_fu_76) < unsigned(ap_const_lv8_A0)) else "0";
    tmp_22_fu_289_p2 <= "1" when (unsigned(Win_val_1_1_fu_76) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_23_fu_295_p2 <= "1" when (unsigned(supressed_data_stream_V_dout) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_24_fu_301_p2 <= "1" when (unsigned(Win_val_0_1_fu_68) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_25_fu_307_p2 <= "1" when (unsigned(Win_val_0_1_2_fu_72) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_26_fu_396_p2 <= "1" when (unsigned(temp1_reg_552) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_27_fu_313_p2 <= "1" when (unsigned(Win_val_1_1_2_fu_80) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_28_fu_401_p2 <= "1" when (unsigned(temp2_reg_547) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_29_fu_319_p2 <= "1" when (unsigned(Win_val_2_1_fu_84) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_30_fu_325_p2 <= "1" when (unsigned(Win_val_2_1_2_fu_88) > unsigned(ap_const_lv8_DC)) else "0";
    tmp_31_fu_434_p2 <= (or_cond_fu_424_p2 and not_or_cond8_fu_429_p2);
    tmp_32_fu_244_p2 <= "1" when (unsigned(p_2_reg_153) < unsigned(ap_const_lv11_3FF)) else "0";
    tmp_37_fu_222_p4 <= p_2_reg_153(10 downto 1);
    tmp_fu_176_p4 <= p_s_reg_142(10 downto 1);
    tmp_s_fu_198_p2 <= "1" when (unsigned(p_s_reg_142) < unsigned(ap_const_lv11_3FF)) else "0";
end behav;
