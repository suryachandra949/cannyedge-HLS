In file included from C:/Xilinx/Vivado_HLS/2015.4/include/floating_point_v7_0_bitacc_cmodel.h:143:0,
                 from C:/Xilinx/Vivado_HLS/2015.4/include/hls_half.h:40,
                 from C:/Xilinx/Vivado_HLS/2015.4/include/hls/utils/x_hls_utils.h:37,
                 from C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_axi_io.h:40,
                 from C:/Xilinx/Vivado_HLS/2015.4/include/hls_video.h:48,
                 from ../../../cannyedge.h:1,
                 from ../../../cannyedge.cc:1:
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:62:0: warning: "__GMP_LIBGMP_DLL" redefined [enabled by default]
C:/Xilinx/Vivado_HLS/2015.4/include/floating_point_v7_0_bitacc_cmodel.h:135:0: note: this is the location of the previous definition
../../../cannyedge.cc: In function 'void grad_computation(hls::Mat<1024, 1024, 2>&, hls::Mat<1024, 1024, 2>&, hls::Mat<1024, 1024, 2>&)':
../../../cannyedge.cc:29:14: error: no match for 'operator>>' in 'grad_x >> g_x'
../../../cannyedge.cc:29:14: note: candidates are:
C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_video_core.h:654:6: note: void hls::Mat<ROWS, COLS, T>::operator>>(hls::Scalar<(((T & ((512 - 1) << 4)) >> 4) + 1), typename Type<(T & ((1 << 4) - 1))>::name>&) [with int ROWS = 1024, int COLS = 1024, int T = 2, typename Type<(T & ((1 << 4) - 1))>::name = short unsigned int]
C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_video_core.h:654:6: note:   no known conversion for argument 1 from 'hls::Scalar<1, unsigned char>' to 'hls::Scalar<1, short unsigned int>&'
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1270:1: note: template<int _AP_W, bool _AP_S> bool operator>>(bool, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1270:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<1, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1271:1: note: template<int _AP_W, bool _AP_S> char operator>>(char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1271:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1272:1: note: template<int _AP_W, bool _AP_S> signed char operator>>(signed char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1272:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1273:1: note: template<int _AP_W, bool _AP_S> unsigned char operator>>(unsigned char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1273:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1274:1: note: template<int _AP_W, bool _AP_S> short int operator>>(short int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1274:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<16, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1275:1: note: template<int _AP_W, bool _AP_S> short unsigned int operator>>(short unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1275:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<16, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1276:1: note: template<int _AP_W, bool _AP_S> int operator>>(int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1276:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1277:1: note: template<int _AP_W, bool _AP_S> unsigned int operator>>(unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1277:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1282:1: note: template<int _AP_W, bool _AP_S> long int operator>>(long int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1282:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1283:1: note: template<int _AP_W, bool _AP_S> long unsigned int operator>>(long unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1283:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1285:1: note: template<int _AP_W, bool _AP_S> ap_slong operator>>(ap_slong, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1285:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<64, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1286:1: note: template<int _AP_W, bool _AP_S> ap_ulong operator>>(ap_ulong, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1286:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<64, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1347:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_range_ref<_AP_W1, _AP_S1>&, const ap_private<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1347:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, const ap_range_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1412:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<1, false>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_bit_ref<_AP_W1, _AP_S1>&, const ap_private<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1412:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<1, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, const ap_bit_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1494:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<1, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1494:1: note: template<int _AP_W, bool _AP_S> typename ap_private<1, false>::RType<_AP_W, false>::arg1 operator>>(bool, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1495:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1495:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, true>::RType<_AP_W, false>::arg1 operator>>(char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1496:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1496:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, true>::RType<_AP_W, false>::arg1 operator>>(signed char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1497:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1497:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, false, true>::RType<_AP_W, false>::arg1 operator>>(unsigned char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1498:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<16, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1498:1: note: template<int _AP_W, bool _AP_S> typename ap_private<16, true>::RType<_AP_W, false>::arg1 operator>>(short int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1499:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<16, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1499:1: note: template<int _AP_W, bool _AP_S> typename ap_private<16, false, true>::RType<_AP_W, false>::arg1 operator>>(short unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1500:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1500:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, true>::RType<_AP_W, false>::arg1 operator>>(int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1501:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1501:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, false, true>::RType<_AP_W, false>::arg1 operator>>(unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1506:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1506:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, true>::RType<_AP_W, false>::arg1 operator>>(long int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1507:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1507:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, false, true>::RType<_AP_W, false>::arg1 operator>>(long unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1509:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<64, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1509:1: note: template<int _AP_W, bool _AP_S> typename ap_private<64, true>::RType<_AP_W, false>::arg1 operator>>(ap_slong, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1510:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<64, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1510:1: note: template<int _AP_W, bool _AP_S> typename ap_private<64, false, true>::RType<_AP_W, false>::arg1 operator>>(ap_ulong, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1524:1: note: template<int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W1, false>::RType<_AP_W2, false>::arg1 operator>>(const ap_range_ref<_AP_W1, _AP_S1>&, const ap_range_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1702:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1703:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1704:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1705:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1706:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1732:22: note: template<int _AP_W, bool _AP_S> std::istream& operator>>(std::istream&, ap_private<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1751:22: note: template<int _AP_W, bool _AP_S> std::istream& operator>>(std::istream&, ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2549:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> std::istream& operator>>(std::istream&, ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2703:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<1, 1, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2704:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2705:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2706:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2707:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<16, 16, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2708:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<16, 16, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2709:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2710:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2715:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2716:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2718:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<64, 64, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2719:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<64, 64, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2331:33: note: std::istream& operator>>(std::istream&, mpz_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2331:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2332:33: note: std::istream& operator>>(std::istream&, mpq_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2332:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2333:33: note: std::istream& operator>>(std::istream&, mpf_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2333:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/hls_half.h:2210:4: note: template<class charT, class traits> std::basic_istream<_CharT, _Traits>& detail::operator>>(std::basic_istream<_CharT, _Traits>&, half&)
../../../cannyedge.cc:30:14: error: no match for 'operator>>' in 'grad_y >> g_y'
../../../cannyedge.cc:30:14: note: candidates are:
C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_video_core.h:654:6: note: void hls::Mat<ROWS, COLS, T>::operator>>(hls::Scalar<(((T & ((512 - 1) << 4)) >> 4) + 1), typename Type<(T & ((1 << 4) - 1))>::name>&) [with int ROWS = 1024, int COLS = 1024, int T = 2, typename Type<(T & ((1 << 4) - 1))>::name = short unsigned int]
C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_video_core.h:654:6: note:   no known conversion for argument 1 from 'hls::Scalar<1, unsigned char>' to 'hls::Scalar<1, short unsigned int>&'
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1270:1: note: template<int _AP_W, bool _AP_S> bool operator>>(bool, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1270:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<1, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1271:1: note: template<int _AP_W, bool _AP_S> char operator>>(char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1271:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1272:1: note: template<int _AP_W, bool _AP_S> signed char operator>>(signed char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1272:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1273:1: note: template<int _AP_W, bool _AP_S> unsigned char operator>>(unsigned char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1273:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1274:1: note: template<int _AP_W, bool _AP_S> short int operator>>(short int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1274:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<16, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1275:1: note: template<int _AP_W, bool _AP_S> short unsigned int operator>>(short unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1275:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<16, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1276:1: note: template<int _AP_W, bool _AP_S> int operator>>(int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1276:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1277:1: note: template<int _AP_W, bool _AP_S> unsigned int operator>>(unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1277:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1282:1: note: template<int _AP_W, bool _AP_S> long int operator>>(long int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1282:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1283:1: note: template<int _AP_W, bool _AP_S> long unsigned int operator>>(long unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1283:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1285:1: note: template<int _AP_W, bool _AP_S> ap_slong operator>>(ap_slong, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1285:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<64, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1286:1: note: template<int _AP_W, bool _AP_S> ap_ulong operator>>(ap_ulong, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1286:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<64, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1347:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_range_ref<_AP_W1, _AP_S1>&, const ap_private<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1347:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, const ap_range_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1412:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<1, false>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_bit_ref<_AP_W1, _AP_S1>&, const ap_private<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1412:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<1, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, const ap_bit_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1494:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<1, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1494:1: note: template<int _AP_W, bool _AP_S> typename ap_private<1, false>::RType<_AP_W, false>::arg1 operator>>(bool, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1495:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1495:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, true>::RType<_AP_W, false>::arg1 operator>>(char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1496:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1496:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, true>::RType<_AP_W, false>::arg1 operator>>(signed char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1497:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1497:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, false, true>::RType<_AP_W, false>::arg1 operator>>(unsigned char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1498:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<16, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1498:1: note: template<int _AP_W, bool _AP_S> typename ap_private<16, true>::RType<_AP_W, false>::arg1 operator>>(short int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1499:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<16, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1499:1: note: template<int _AP_W, bool _AP_S> typename ap_private<16, false, true>::RType<_AP_W, false>::arg1 operator>>(short unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1500:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1500:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, true>::RType<_AP_W, false>::arg1 operator>>(int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1501:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1501:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, false, true>::RType<_AP_W, false>::arg1 operator>>(unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1506:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1506:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, true>::RType<_AP_W, false>::arg1 operator>>(long int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1507:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1507:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, false, true>::RType<_AP_W, false>::arg1 operator>>(long unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1509:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<64, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1509:1: note: template<int _AP_W, bool _AP_S> typename ap_private<64, true>::RType<_AP_W, false>::arg1 operator>>(ap_slong, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1510:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<64, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1510:1: note: template<int _AP_W, bool _AP_S> typename ap_private<64, false, true>::RType<_AP_W, false>::arg1 operator>>(ap_ulong, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1524:1: note: template<int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W1, false>::RType<_AP_W2, false>::arg1 operator>>(const ap_range_ref<_AP_W1, _AP_S1>&, const ap_range_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1702:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1703:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1704:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1705:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1706:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1732:22: note: template<int _AP_W, bool _AP_S> std::istream& operator>>(std::istream&, ap_private<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1751:22: note: template<int _AP_W, bool _AP_S> std::istream& operator>>(std::istream&, ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2549:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> std::istream& operator>>(std::istream&, ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2703:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<1, 1, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2704:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2705:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2706:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2707:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<16, 16, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2708:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<16, 16, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2709:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2710:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2715:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2716:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2718:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<64, 64, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2719:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<64, 64, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2331:33: note: std::istream& operator>>(std::istream&, mpz_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2331:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2332:33: note: std::istream& operator>>(std::istream&, mpq_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2332:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2333:33: note: std::istream& operator>>(std::istream&, mpf_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2333:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/hls_half.h:2210:4: note: template<class charT, class traits> std::basic_istream<_CharT, _Traits>& detail::operator>>(std::basic_istream<_CharT, _Traits>&, half&)
../../../cannyedge.cc: In function 'void hysterisis(hls::Mat<1024, 1024, 2>&, hls::Mat<1022, 1022, 2>&)':
../../../cannyedge.cc:179:18: error: no match for 'operator>>' in 'supressed >> get_pixel'
../../../cannyedge.cc:179:18: note: candidates are:
C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_video_core.h:654:6: note: void hls::Mat<ROWS, COLS, T>::operator>>(hls::Scalar<(((T & ((512 - 1) << 4)) >> 4) + 1), typename Type<(T & ((1 << 4) - 1))>::name>&) [with int ROWS = 1024, int COLS = 1024, int T = 2, typename Type<(T & ((1 << 4) - 1))>::name = short unsigned int]
C:/Xilinx/Vivado_HLS/2015.4/include/hls/hls_video_core.h:654:6: note:   no known conversion for argument 1 from 'hls::Scalar<1, unsigned char>' to 'hls::Scalar<1, short unsigned int>&'
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1270:1: note: template<int _AP_W, bool _AP_S> bool operator>>(bool, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1270:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<1, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1271:1: note: template<int _AP_W, bool _AP_S> char operator>>(char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1271:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1272:1: note: template<int _AP_W, bool _AP_S> signed char operator>>(signed char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1272:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1273:1: note: template<int _AP_W, bool _AP_S> unsigned char operator>>(unsigned char, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1273:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<8, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1274:1: note: template<int _AP_W, bool _AP_S> short int operator>>(short int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1274:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<16, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1275:1: note: template<int _AP_W, bool _AP_S> short unsigned int operator>>(short unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1275:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<16, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1276:1: note: template<int _AP_W, bool _AP_S> int operator>>(int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1276:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1277:1: note: template<int _AP_W, bool _AP_S> unsigned int operator>>(unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1277:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1282:1: note: template<int _AP_W, bool _AP_S> long int operator>>(long int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1282:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1283:1: note: template<int _AP_W, bool _AP_S> long unsigned int operator>>(long unsigned int, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1283:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<32, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1285:1: note: template<int _AP_W, bool _AP_S> ap_slong operator>>(ap_slong, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1285:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<64, true>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1286:1: note: template<int _AP_W, bool _AP_S> ap_ulong operator>>(ap_ulong, const ap_private<_AP_W, _AP_S, false>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1286:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, _AP_S>::RType<64, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1347:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_range_ref<_AP_W1, _AP_S1>&, const ap_private<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1347:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, const ap_range_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1412:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<1, false>::RType<_AP_W2, _AP_S2>::arg1 operator>>(const ap_bit_ref<_AP_W1, _AP_S1>&, const ap_private<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1412:1: note: template<int _AP_W1, bool _AP_S1, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W, _AP_S>::RType<1, false>::arg1 operator>>(const ap_private<_AP_W, _AP_S>&, const ap_bit_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1494:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<1, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1494:1: note: template<int _AP_W, bool _AP_S> typename ap_private<1, false>::RType<_AP_W, false>::arg1 operator>>(bool, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1495:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1495:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, true>::RType<_AP_W, false>::arg1 operator>>(char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1496:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1496:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, true>::RType<_AP_W, false>::arg1 operator>>(signed char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1497:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<8, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1497:1: note: template<int _AP_W, bool _AP_S> typename ap_private<8, false, true>::RType<_AP_W, false>::arg1 operator>>(unsigned char, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1498:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<16, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1498:1: note: template<int _AP_W, bool _AP_S> typename ap_private<16, true>::RType<_AP_W, false>::arg1 operator>>(short int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1499:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<16, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1499:1: note: template<int _AP_W, bool _AP_S> typename ap_private<16, false, true>::RType<_AP_W, false>::arg1 operator>>(short unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1500:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1500:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, true>::RType<_AP_W, false>::arg1 operator>>(int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1501:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1501:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, false, true>::RType<_AP_W, false>::arg1 operator>>(unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1506:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1506:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, true>::RType<_AP_W, false>::arg1 operator>>(long int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1507:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<32, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1507:1: note: template<int _AP_W, bool _AP_S> typename ap_private<32, false, true>::RType<_AP_W, false>::arg1 operator>>(long unsigned int, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1509:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<64, true>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1509:1: note: template<int _AP_W, bool _AP_S> typename ap_private<64, true>::RType<_AP_W, false>::arg1 operator>>(ap_slong, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1510:1: note: template<int _AP_W, bool _AP_S> typename ap_private<_AP_W, false>::RType<64, false>::arg1 operator>>(const ap_range_ref<_AP_W, _AP_S>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1510:1: note: template<int _AP_W, bool _AP_S> typename ap_private<64, false, true>::RType<_AP_W, false>::arg1 operator>>(ap_ulong, const ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1524:1: note: template<int _AP_W, bool _AP_S, int _AP_W2, bool _AP_S2> typename ap_private<_AP_W1, false>::RType<_AP_W2, false>::arg1 operator>>(const ap_range_ref<_AP_W1, _AP_S1>&, const ap_range_ref<_AP_W2, _AP_S2>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1702:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1703:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1704:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1705:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1706:1: note: template<int _AP_W, class _AP_T, int _AP_W1, class _AP_T1> ap_uint<(_AP_W + _AP_W1)> operator>>(ap_concat_ref<_AP_W2, _AP_T2, _AP_W3, _AP_T3>, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1732:22: note: template<int _AP_W, bool _AP_S> std::istream& operator>>(std::istream&, ap_private<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_int_sim.h:1751:22: note: template<int _AP_W, bool _AP_S> std::istream& operator>>(std::istream&, ap_range_ref<_AP_W, _AP_S>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2549:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> std::istream& operator>>(std::istream&, ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2703:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<1, 1, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, bool)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2704:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2705:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, signed char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2706:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<8, 8, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, unsigned char)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2707:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<16, 16, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, short int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2708:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<16, 16, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, short unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2709:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2710:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2715:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, long int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2716:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<32, 32, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, long unsigned int)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2718:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<64, 64, true>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, ap_slong)
C:/Xilinx/Vivado_HLS/2015.4/include/etc/ap_fixed_sim.h:2719:1: note: template<int _AP_W, int _AP_I, bool _AP_S, ap_q_mode _AP_Q, ap_o_mode _AP_O, int _AP_N> typename ap_fixed_base<_AP_W, _AP_I, _AP_S>::RType<64, 64, false>::arg1 operator>>(const ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>&, ap_ulong)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2331:33: note: std::istream& operator>>(std::istream&, mpz_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2331:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2332:33: note: std::istream& operator>>(std::istream&, mpq_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2332:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2333:33: note: std::istream& operator>>(std::istream&, mpf_ptr)
C:/Xilinx/Vivado_HLS/2015.4/include/gmp.h:2333:33: note:   no known conversion for argument 1 from 'hls::Mat<1024, 1024, 2>' to 'std::istream& {aka std::basic_istream<char>&}'
C:/Xilinx/Vivado_HLS/2015.4/include/hls_half.h:2210:4: note: template<class charT, class traits> std::basic_istream<_CharT, _Traits>& detail::operator>>(std::basic_istream<_CharT, _Traits>&, half&)
